package lb.rest.trade.db.entity;

import java.util.ArrayList;
import java.util.List;

public class CommonAttrValueExample {
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to
	 * the database table common_attr_value
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	protected String orderByClause;

	/**
	 * This field was generated by MyBatis Generator. This field corresponds to
	 * the database table common_attr_value
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	protected boolean distinct;

	/**
	 * This field was generated by MyBatis Generator. This field corresponds to
	 * the database table common_attr_value
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	protected List<Criteria> oredCriteria;

	protected int offset;

	protected int limit;

	protected String sumCol;

	protected String groupSelClause;

	protected String groupByClause;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr_value
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	public CommonAttrValueExample() {
		oredCriteria = new ArrayList<Criteria>();
		offset = 0;
		limit = Integer.MAX_VALUE;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr_value
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr_value
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr_value
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr_value
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr_value
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr_value
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr_value
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr_value
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr_value
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr_value
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
		this.offset = 0;
		this.limit = Integer.MAX_VALUE;
		this.sumCol = null;
		this.groupSelClause = null;
		this.groupByClause = null;
	}

	public void setOffset(int offset) {
		this.offset = offset;
	}

	public int getOffset() {
		return offset;
	}

	public void setLimit(int limit) {
		this.limit = limit;
	}

	public int getLimit() {
		return limit;
	}

	public void setSumCol(String sumCol) {
		this.sumCol = sumCol;
	}

	public String getSumCol() {
		return sumCol;
	}

	public void setGroupSelClause(String groupSelClause) {
		this.groupSelClause = groupSelClause;
	}

	public String getGroupSelClause() {
		return groupSelClause;
	}

	public void setGroupByClause(String groupByClause) {
		this.groupByClause = groupByClause;
	}

	public String getGroupByClause() {
		return groupByClause;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to
	 * the database table common_attr_value
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andAttridIsNull() {
			addCriterion("attrId is null");
			return (Criteria) this;
		}

		public Criteria andAttridIsNotNull() {
			addCriterion("attrId is not null");
			return (Criteria) this;
		}

		public Criteria andAttridEqualTo(Integer value) {
			addCriterion("attrId =", value, "attrid");
			return (Criteria) this;
		}

		public Criteria andAttridNotEqualTo(Integer value) {
			addCriterion("attrId <>", value, "attrid");
			return (Criteria) this;
		}

		public Criteria andAttridGreaterThan(Integer value) {
			addCriterion("attrId >", value, "attrid");
			return (Criteria) this;
		}

		public Criteria andAttridGreaterThanOrEqualTo(Integer value) {
			addCriterion("attrId >=", value, "attrid");
			return (Criteria) this;
		}

		public Criteria andAttridLessThan(Integer value) {
			addCriterion("attrId <", value, "attrid");
			return (Criteria) this;
		}

		public Criteria andAttridLessThanOrEqualTo(Integer value) {
			addCriterion("attrId <=", value, "attrid");
			return (Criteria) this;
		}

		public Criteria andAttridIn(List<Integer> values) {
			addCriterion("attrId in", values, "attrid");
			return (Criteria) this;
		}

		public Criteria andAttridNotIn(List<Integer> values) {
			addCriterion("attrId not in", values, "attrid");
			return (Criteria) this;
		}

		public Criteria andAttridBetween(Integer value1, Integer value2) {
			addCriterion("attrId between", value1, value2, "attrid");
			return (Criteria) this;
		}

		public Criteria andAttridNotBetween(Integer value1, Integer value2) {
			addCriterion("attrId not between", value1, value2, "attrid");
			return (Criteria) this;
		}

		public Criteria andAttrvalueIsNull() {
			addCriterion("attrValue is null");
			return (Criteria) this;
		}

		public Criteria andAttrvalueIsNotNull() {
			addCriterion("attrValue is not null");
			return (Criteria) this;
		}

		public Criteria andAttrvalueEqualTo(String value) {
			addCriterion("attrValue =", value, "attrvalue");
			return (Criteria) this;
		}

		public Criteria andAttrvalueNotEqualTo(String value) {
			addCriterion("attrValue <>", value, "attrvalue");
			return (Criteria) this;
		}

		public Criteria andAttrvalueGreaterThan(String value) {
			addCriterion("attrValue >", value, "attrvalue");
			return (Criteria) this;
		}

		public Criteria andAttrvalueGreaterThanOrEqualTo(String value) {
			addCriterion("attrValue >=", value, "attrvalue");
			return (Criteria) this;
		}

		public Criteria andAttrvalueLessThan(String value) {
			addCriterion("attrValue <", value, "attrvalue");
			return (Criteria) this;
		}

		public Criteria andAttrvalueLessThanOrEqualTo(String value) {
			addCriterion("attrValue <=", value, "attrvalue");
			return (Criteria) this;
		}

		public Criteria andAttrvalueLike(String value) {
			addCriterion("attrValue like", value, "attrvalue");
			return (Criteria) this;
		}

		public Criteria andAttrvalueNotLike(String value) {
			addCriterion("attrValue not like", value, "attrvalue");
			return (Criteria) this;
		}

		public Criteria andAttrvalueIn(List<String> values) {
			addCriterion("attrValue in", values, "attrvalue");
			return (Criteria) this;
		}

		public Criteria andAttrvalueNotIn(List<String> values) {
			addCriterion("attrValue not in", values, "attrvalue");
			return (Criteria) this;
		}

		public Criteria andAttrvalueBetween(String value1, String value2) {
			addCriterion("attrValue between", value1, value2, "attrvalue");
			return (Criteria) this;
		}

		public Criteria andAttrvalueNotBetween(String value1, String value2) {
			addCriterion("attrValue not between", value1, value2, "attrvalue");
			return (Criteria) this;
		}

		public Criteria andTypeidIsNull() {
			addCriterion("typeId is null");
			return (Criteria) this;
		}

		public Criteria andTypeidIsNotNull() {
			addCriterion("typeId is not null");
			return (Criteria) this;
		}

		public Criteria andTypeidEqualTo(Integer value) {
			addCriterion("typeId =", value, "typeid");
			return (Criteria) this;
		}

		public Criteria andTypeidNotEqualTo(Integer value) {
			addCriterion("typeId <>", value, "typeid");
			return (Criteria) this;
		}

		public Criteria andTypeidGreaterThan(Integer value) {
			addCriterion("typeId >", value, "typeid");
			return (Criteria) this;
		}

		public Criteria andTypeidGreaterThanOrEqualTo(Integer value) {
			addCriterion("typeId >=", value, "typeid");
			return (Criteria) this;
		}

		public Criteria andTypeidLessThan(Integer value) {
			addCriterion("typeId <", value, "typeid");
			return (Criteria) this;
		}

		public Criteria andTypeidLessThanOrEqualTo(Integer value) {
			addCriterion("typeId <=", value, "typeid");
			return (Criteria) this;
		}

		public Criteria andTypeidIn(List<Integer> values) {
			addCriterion("typeId in", values, "typeid");
			return (Criteria) this;
		}

		public Criteria andTypeidNotIn(List<Integer> values) {
			addCriterion("typeId not in", values, "typeid");
			return (Criteria) this;
		}

		public Criteria andTypeidBetween(Integer value1, Integer value2) {
			addCriterion("typeId between", value1, value2, "typeid");
			return (Criteria) this;
		}

		public Criteria andTypeidNotBetween(Integer value1, Integer value2) {
			addCriterion("typeId not between", value1, value2, "typeid");
			return (Criteria) this;
		}

		public Criteria andBelongidIsNull() {
			addCriterion("belongId is null");
			return (Criteria) this;
		}

		public Criteria andBelongidIsNotNull() {
			addCriterion("belongId is not null");
			return (Criteria) this;
		}

		public Criteria andBelongidEqualTo(Integer value) {
			addCriterion("belongId =", value, "belongid");
			return (Criteria) this;
		}

		public Criteria andBelongidNotEqualTo(Integer value) {
			addCriterion("belongId <>", value, "belongid");
			return (Criteria) this;
		}

		public Criteria andBelongidGreaterThan(Integer value) {
			addCriterion("belongId >", value, "belongid");
			return (Criteria) this;
		}

		public Criteria andBelongidGreaterThanOrEqualTo(Integer value) {
			addCriterion("belongId >=", value, "belongid");
			return (Criteria) this;
		}

		public Criteria andBelongidLessThan(Integer value) {
			addCriterion("belongId <", value, "belongid");
			return (Criteria) this;
		}

		public Criteria andBelongidLessThanOrEqualTo(Integer value) {
			addCriterion("belongId <=", value, "belongid");
			return (Criteria) this;
		}

		public Criteria andBelongidIn(List<Integer> values) {
			addCriterion("belongId in", values, "belongid");
			return (Criteria) this;
		}

		public Criteria andBelongidNotIn(List<Integer> values) {
			addCriterion("belongId not in", values, "belongid");
			return (Criteria) this;
		}

		public Criteria andBelongidBetween(Integer value1, Integer value2) {
			addCriterion("belongId between", value1, value2, "belongid");
			return (Criteria) this;
		}

		public Criteria andBelongidNotBetween(Integer value1, Integer value2) {
			addCriterion("belongId not between", value1, value2, "belongid");
			return (Criteria) this;
		}

		public Criteria andBelongtableIsNull() {
			addCriterion("belongTable is null");
			return (Criteria) this;
		}

		public Criteria andBelongtableIsNotNull() {
			addCriterion("belongTable is not null");
			return (Criteria) this;
		}

		public Criteria andBelongtableEqualTo(Integer value) {
			addCriterion("belongTable =", value, "belongtable");
			return (Criteria) this;
		}

		public Criteria andBelongtableNotEqualTo(Integer value) {
			addCriterion("belongTable <>", value, "belongtable");
			return (Criteria) this;
		}

		public Criteria andBelongtableGreaterThan(Integer value) {
			addCriterion("belongTable >", value, "belongtable");
			return (Criteria) this;
		}

		public Criteria andBelongtableGreaterThanOrEqualTo(Integer value) {
			addCriterion("belongTable >=", value, "belongtable");
			return (Criteria) this;
		}

		public Criteria andBelongtableLessThan(Integer value) {
			addCriterion("belongTable <", value, "belongtable");
			return (Criteria) this;
		}

		public Criteria andBelongtableLessThanOrEqualTo(Integer value) {
			addCriterion("belongTable <=", value, "belongtable");
			return (Criteria) this;
		}

		public Criteria andBelongtableIn(List<Integer> values) {
			addCriterion("belongTable in", values, "belongtable");
			return (Criteria) this;
		}

		public Criteria andBelongtableNotIn(List<Integer> values) {
			addCriterion("belongTable not in", values, "belongtable");
			return (Criteria) this;
		}

		public Criteria andBelongtableBetween(Integer value1, Integer value2) {
			addCriterion("belongTable between", value1, value2, "belongtable");
			return (Criteria) this;
		}

		public Criteria andBelongtableNotBetween(Integer value1, Integer value2) {
			addCriterion("belongTable not between", value1, value2, "belongtable");
			return (Criteria) this;
		}

		public Criteria andAttrvalueLikeInsensitive(String value) {
			addCriterion("upper(attrValue) like", value.toUpperCase(), "attrvalue");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to
	 * the database table common_attr_value
	 *
	 * @mbggenerated do_not_delete_during_merge Thu Feb 16 17:53:28 CST 2017
	 */
	public static class Criteria extends GeneratedCriteria {

		protected Criteria() {
			super();
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to
	 * the database table common_attr_value
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	public static class Criterion {
		private String condition;

		private Object value;

		private Object secondValue;

		private boolean noValue;

		private boolean singleValue;

		private boolean betweenValue;

		private boolean listValue;

		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}
}