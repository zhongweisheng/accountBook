package lb.rest.user.db.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class CommonAttrExample {
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to
	 * the database table common_attr
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	protected String orderByClause;

	/**
	 * This field was generated by MyBatis Generator. This field corresponds to
	 * the database table common_attr
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	protected boolean distinct;

	/**
	 * This field was generated by MyBatis Generator. This field corresponds to
	 * the database table common_attr
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	protected List<Criteria> oredCriteria;

	protected int offset;

	protected int limit;

	protected String sumCol;

	protected String groupSelClause;

	protected String groupByClause;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	public CommonAttrExample() {
		oredCriteria = new ArrayList<Criteria>();
		offset = 0;
		limit = Integer.MAX_VALUE;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
		this.offset = 0;
		this.limit = Integer.MAX_VALUE;
		this.sumCol = null;
		this.groupSelClause = null;
		this.groupByClause = null;
	}

	public void setOffset(int offset) {
		this.offset = offset;
	}

	public int getOffset() {
		return offset;
	}

	public void setLimit(int limit) {
		this.limit = limit;
	}

	public int getLimit() {
		return limit;
	}

	public void setSumCol(String sumCol) {
		this.sumCol = sumCol;
	}

	public String getSumCol() {
		return sumCol;
	}

	public void setGroupSelClause(String groupSelClause) {
		this.groupSelClause = groupSelClause;
	}

	public String getGroupSelClause() {
		return groupSelClause;
	}

	public void setGroupByClause(String groupByClause) {
		this.groupByClause = groupByClause;
	}

	public String getGroupByClause() {
		return groupByClause;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to
	 * the database table common_attr
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andAttridIsNull() {
			addCriterion("attrId is null");
			return (Criteria) this;
		}

		public Criteria andAttridIsNotNull() {
			addCriterion("attrId is not null");
			return (Criteria) this;
		}

		public Criteria andAttridEqualTo(Integer value) {
			addCriterion("attrId =", value, "attrid");
			return (Criteria) this;
		}

		public Criteria andAttridNotEqualTo(Integer value) {
			addCriterion("attrId <>", value, "attrid");
			return (Criteria) this;
		}

		public Criteria andAttridGreaterThan(Integer value) {
			addCriterion("attrId >", value, "attrid");
			return (Criteria) this;
		}

		public Criteria andAttridGreaterThanOrEqualTo(Integer value) {
			addCriterion("attrId >=", value, "attrid");
			return (Criteria) this;
		}

		public Criteria andAttridLessThan(Integer value) {
			addCriterion("attrId <", value, "attrid");
			return (Criteria) this;
		}

		public Criteria andAttridLessThanOrEqualTo(Integer value) {
			addCriterion("attrId <=", value, "attrid");
			return (Criteria) this;
		}

		public Criteria andAttridIn(List<Integer> values) {
			addCriterion("attrId in", values, "attrid");
			return (Criteria) this;
		}

		public Criteria andAttridNotIn(List<Integer> values) {
			addCriterion("attrId not in", values, "attrid");
			return (Criteria) this;
		}

		public Criteria andAttridBetween(Integer value1, Integer value2) {
			addCriterion("attrId between", value1, value2, "attrid");
			return (Criteria) this;
		}

		public Criteria andAttridNotBetween(Integer value1, Integer value2) {
			addCriterion("attrId not between", value1, value2, "attrid");
			return (Criteria) this;
		}

		public Criteria andAttrnameIsNull() {
			addCriterion("attrName is null");
			return (Criteria) this;
		}

		public Criteria andAttrnameIsNotNull() {
			addCriterion("attrName is not null");
			return (Criteria) this;
		}

		public Criteria andAttrnameEqualTo(String value) {
			addCriterion("attrName =", value, "attrname");
			return (Criteria) this;
		}

		public Criteria andAttrnameNotEqualTo(String value) {
			addCriterion("attrName <>", value, "attrname");
			return (Criteria) this;
		}

		public Criteria andAttrnameGreaterThan(String value) {
			addCriterion("attrName >", value, "attrname");
			return (Criteria) this;
		}

		public Criteria andAttrnameGreaterThanOrEqualTo(String value) {
			addCriterion("attrName >=", value, "attrname");
			return (Criteria) this;
		}

		public Criteria andAttrnameLessThan(String value) {
			addCriterion("attrName <", value, "attrname");
			return (Criteria) this;
		}

		public Criteria andAttrnameLessThanOrEqualTo(String value) {
			addCriterion("attrName <=", value, "attrname");
			return (Criteria) this;
		}

		public Criteria andAttrnameLike(String value) {
			addCriterion("attrName like", value, "attrname");
			return (Criteria) this;
		}

		public Criteria andAttrnameNotLike(String value) {
			addCriterion("attrName not like", value, "attrname");
			return (Criteria) this;
		}

		public Criteria andAttrnameIn(List<String> values) {
			addCriterion("attrName in", values, "attrname");
			return (Criteria) this;
		}

		public Criteria andAttrnameNotIn(List<String> values) {
			addCriterion("attrName not in", values, "attrname");
			return (Criteria) this;
		}

		public Criteria andAttrnameBetween(String value1, String value2) {
			addCriterion("attrName between", value1, value2, "attrname");
			return (Criteria) this;
		}

		public Criteria andAttrnameNotBetween(String value1, String value2) {
			addCriterion("attrName not between", value1, value2, "attrname");
			return (Criteria) this;
		}

		public Criteria andTypeidIsNull() {
			addCriterion("typeId is null");
			return (Criteria) this;
		}

		public Criteria andTypeidIsNotNull() {
			addCriterion("typeId is not null");
			return (Criteria) this;
		}

		public Criteria andTypeidEqualTo(Integer value) {
			addCriterion("typeId =", value, "typeid");
			return (Criteria) this;
		}

		public Criteria andTypeidNotEqualTo(Integer value) {
			addCriterion("typeId <>", value, "typeid");
			return (Criteria) this;
		}

		public Criteria andTypeidGreaterThan(Integer value) {
			addCriterion("typeId >", value, "typeid");
			return (Criteria) this;
		}

		public Criteria andTypeidGreaterThanOrEqualTo(Integer value) {
			addCriterion("typeId >=", value, "typeid");
			return (Criteria) this;
		}

		public Criteria andTypeidLessThan(Integer value) {
			addCriterion("typeId <", value, "typeid");
			return (Criteria) this;
		}

		public Criteria andTypeidLessThanOrEqualTo(Integer value) {
			addCriterion("typeId <=", value, "typeid");
			return (Criteria) this;
		}

		public Criteria andTypeidIn(List<Integer> values) {
			addCriterion("typeId in", values, "typeid");
			return (Criteria) this;
		}

		public Criteria andTypeidNotIn(List<Integer> values) {
			addCriterion("typeId not in", values, "typeid");
			return (Criteria) this;
		}

		public Criteria andTypeidBetween(Integer value1, Integer value2) {
			addCriterion("typeId between", value1, value2, "typeid");
			return (Criteria) this;
		}

		public Criteria andTypeidNotBetween(Integer value1, Integer value2) {
			addCriterion("typeId not between", value1, value2, "typeid");
			return (Criteria) this;
		}

		public Criteria andIsavailableIsNull() {
			addCriterion("isAvailable is null");
			return (Criteria) this;
		}

		public Criteria andIsavailableIsNotNull() {
			addCriterion("isAvailable is not null");
			return (Criteria) this;
		}

		public Criteria andIsavailableEqualTo(Integer value) {
			addCriterion("isAvailable =", value, "isavailable");
			return (Criteria) this;
		}

		public Criteria andIsavailableNotEqualTo(Integer value) {
			addCriterion("isAvailable <>", value, "isavailable");
			return (Criteria) this;
		}

		public Criteria andIsavailableGreaterThan(Integer value) {
			addCriterion("isAvailable >", value, "isavailable");
			return (Criteria) this;
		}

		public Criteria andIsavailableGreaterThanOrEqualTo(Integer value) {
			addCriterion("isAvailable >=", value, "isavailable");
			return (Criteria) this;
		}

		public Criteria andIsavailableLessThan(Integer value) {
			addCriterion("isAvailable <", value, "isavailable");
			return (Criteria) this;
		}

		public Criteria andIsavailableLessThanOrEqualTo(Integer value) {
			addCriterion("isAvailable <=", value, "isavailable");
			return (Criteria) this;
		}

		public Criteria andIsavailableIn(List<Integer> values) {
			addCriterion("isAvailable in", values, "isavailable");
			return (Criteria) this;
		}

		public Criteria andIsavailableNotIn(List<Integer> values) {
			addCriterion("isAvailable not in", values, "isavailable");
			return (Criteria) this;
		}

		public Criteria andIsavailableBetween(Integer value1, Integer value2) {
			addCriterion("isAvailable between", value1, value2, "isavailable");
			return (Criteria) this;
		}

		public Criteria andIsavailableNotBetween(Integer value1, Integer value2) {
			addCriterion("isAvailable not between", value1, value2, "isavailable");
			return (Criteria) this;
		}

		public Criteria andCreatetimeIsNull() {
			addCriterion("createTime is null");
			return (Criteria) this;
		}

		public Criteria andCreatetimeIsNotNull() {
			addCriterion("createTime is not null");
			return (Criteria) this;
		}

		public Criteria andCreatetimeEqualTo(Date value) {
			addCriterion("createTime =", value, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeNotEqualTo(Date value) {
			addCriterion("createTime <>", value, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeGreaterThan(Date value) {
			addCriterion("createTime >", value, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeGreaterThanOrEqualTo(Date value) {
			addCriterion("createTime >=", value, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeLessThan(Date value) {
			addCriterion("createTime <", value, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeLessThanOrEqualTo(Date value) {
			addCriterion("createTime <=", value, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeIn(List<Date> values) {
			addCriterion("createTime in", values, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeNotIn(List<Date> values) {
			addCriterion("createTime not in", values, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeBetween(Date value1, Date value2) {
			addCriterion("createTime between", value1, value2, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeNotBetween(Date value1, Date value2) {
			addCriterion("createTime not between", value1, value2, "createtime");
			return (Criteria) this;
		}

		public Criteria andSortIsNull() {
			addCriterion("sort is null");
			return (Criteria) this;
		}

		public Criteria andSortIsNotNull() {
			addCriterion("sort is not null");
			return (Criteria) this;
		}

		public Criteria andSortEqualTo(Integer value) {
			addCriterion("sort =", value, "sort");
			return (Criteria) this;
		}

		public Criteria andSortNotEqualTo(Integer value) {
			addCriterion("sort <>", value, "sort");
			return (Criteria) this;
		}

		public Criteria andSortGreaterThan(Integer value) {
			addCriterion("sort >", value, "sort");
			return (Criteria) this;
		}

		public Criteria andSortGreaterThanOrEqualTo(Integer value) {
			addCriterion("sort >=", value, "sort");
			return (Criteria) this;
		}

		public Criteria andSortLessThan(Integer value) {
			addCriterion("sort <", value, "sort");
			return (Criteria) this;
		}

		public Criteria andSortLessThanOrEqualTo(Integer value) {
			addCriterion("sort <=", value, "sort");
			return (Criteria) this;
		}

		public Criteria andSortIn(List<Integer> values) {
			addCriterion("sort in", values, "sort");
			return (Criteria) this;
		}

		public Criteria andSortNotIn(List<Integer> values) {
			addCriterion("sort not in", values, "sort");
			return (Criteria) this;
		}

		public Criteria andSortBetween(Integer value1, Integer value2) {
			addCriterion("sort between", value1, value2, "sort");
			return (Criteria) this;
		}

		public Criteria andSortNotBetween(Integer value1, Integer value2) {
			addCriterion("sort not between", value1, value2, "sort");
			return (Criteria) this;
		}

		public Criteria andRuleIsNull() {
			addCriterion("rule is null");
			return (Criteria) this;
		}

		public Criteria andRuleIsNotNull() {
			addCriterion("rule is not null");
			return (Criteria) this;
		}

		public Criteria andRuleEqualTo(String value) {
			addCriterion("rule =", value, "rule");
			return (Criteria) this;
		}

		public Criteria andRuleNotEqualTo(String value) {
			addCriterion("rule <>", value, "rule");
			return (Criteria) this;
		}

		public Criteria andRuleGreaterThan(String value) {
			addCriterion("rule >", value, "rule");
			return (Criteria) this;
		}

		public Criteria andRuleGreaterThanOrEqualTo(String value) {
			addCriterion("rule >=", value, "rule");
			return (Criteria) this;
		}

		public Criteria andRuleLessThan(String value) {
			addCriterion("rule <", value, "rule");
			return (Criteria) this;
		}

		public Criteria andRuleLessThanOrEqualTo(String value) {
			addCriterion("rule <=", value, "rule");
			return (Criteria) this;
		}

		public Criteria andRuleLike(String value) {
			addCriterion("rule like", value, "rule");
			return (Criteria) this;
		}

		public Criteria andRuleNotLike(String value) {
			addCriterion("rule not like", value, "rule");
			return (Criteria) this;
		}

		public Criteria andRuleIn(List<String> values) {
			addCriterion("rule in", values, "rule");
			return (Criteria) this;
		}

		public Criteria andRuleNotIn(List<String> values) {
			addCriterion("rule not in", values, "rule");
			return (Criteria) this;
		}

		public Criteria andRuleBetween(String value1, String value2) {
			addCriterion("rule between", value1, value2, "rule");
			return (Criteria) this;
		}

		public Criteria andRuleNotBetween(String value1, String value2) {
			addCriterion("rule not between", value1, value2, "rule");
			return (Criteria) this;
		}

		public Criteria andWeightIsNull() {
			addCriterion("weight is null");
			return (Criteria) this;
		}

		public Criteria andWeightIsNotNull() {
			addCriterion("weight is not null");
			return (Criteria) this;
		}

		public Criteria andWeightEqualTo(Double value) {
			addCriterion("weight =", value, "weight");
			return (Criteria) this;
		}

		public Criteria andWeightNotEqualTo(Double value) {
			addCriterion("weight <>", value, "weight");
			return (Criteria) this;
		}

		public Criteria andWeightGreaterThan(Double value) {
			addCriterion("weight >", value, "weight");
			return (Criteria) this;
		}

		public Criteria andWeightGreaterThanOrEqualTo(Double value) {
			addCriterion("weight >=", value, "weight");
			return (Criteria) this;
		}

		public Criteria andWeightLessThan(Double value) {
			addCriterion("weight <", value, "weight");
			return (Criteria) this;
		}

		public Criteria andWeightLessThanOrEqualTo(Double value) {
			addCriterion("weight <=", value, "weight");
			return (Criteria) this;
		}

		public Criteria andWeightIn(List<Double> values) {
			addCriterion("weight in", values, "weight");
			return (Criteria) this;
		}

		public Criteria andWeightNotIn(List<Double> values) {
			addCriterion("weight not in", values, "weight");
			return (Criteria) this;
		}

		public Criteria andWeightBetween(Double value1, Double value2) {
			addCriterion("weight between", value1, value2, "weight");
			return (Criteria) this;
		}

		public Criteria andWeightNotBetween(Double value1, Double value2) {
			addCriterion("weight not between", value1, value2, "weight");
			return (Criteria) this;
		}

		public Criteria andAttrnameLikeInsensitive(String value) {
			addCriterion("upper(attrName) like", value.toUpperCase(), "attrname");
			return (Criteria) this;
		}

		public Criteria andRuleLikeInsensitive(String value) {
			addCriterion("upper(rule) like", value.toUpperCase(), "rule");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to
	 * the database table common_attr
	 *
	 * @mbggenerated do_not_delete_during_merge Thu Feb 16 17:53:28 CST 2017
	 */
	public static class Criteria extends GeneratedCriteria {

		protected Criteria() {
			super();
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to
	 * the database table common_attr
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	public static class Criterion {
		private String condition;

		private Object value;

		private Object secondValue;

		private boolean noValue;

		private boolean singleValue;

		private boolean betweenValue;

		private boolean listValue;

		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}
}