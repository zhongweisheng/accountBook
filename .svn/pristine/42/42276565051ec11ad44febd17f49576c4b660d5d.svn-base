package lb.rest.user.db.mapper;

import java.util.List;
import lb.rest.user.db.entity.BsUserComment;
import lb.rest.user.db.entity.BsUserCommentExample;
import lb.rest.user.db.entity.BsUserCommentKey;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface BsUserCommentMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bs_user_comment
     *
     * @mbggenerated Thu Jun 01 10:59:28 CST 2017
     */
    @SelectProvider(type=BsUserCommentSqlProvider.class, method="countByExample")
    int countByExample(BsUserCommentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bs_user_comment
     *
     * @mbggenerated Thu Jun 01 10:59:28 CST 2017
     */
    @DeleteProvider(type=BsUserCommentSqlProvider.class, method="deleteByExample")
    int deleteByExample(BsUserCommentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bs_user_comment
     *
     * @mbggenerated Thu Jun 01 10:59:28 CST 2017
     */
    @Delete({
        "delete from bs_user_comment",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(BsUserCommentKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bs_user_comment
     *
     * @mbggenerated Thu Jun 01 10:59:28 CST 2017
     */
    @Insert({
        "insert into bs_user_comment (id, user_id, ",
        "comment_time, commentator_id, ",
        "commentator_name, comment_level, ",
        "content, remark, ",
        "from_type, has_read, ",
        "int_column1, int_column2, ",
        "str_column1, str_column2)",
        "values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, ",
        "#{commentTime,jdbcType=TIMESTAMP}, #{commentatorId,jdbcType=INTEGER}, ",
        "#{commentatorName,jdbcType=VARCHAR}, #{commentLevel,jdbcType=INTEGER}, ",
        "#{content,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, ",
        "#{fromType,jdbcType=INTEGER}, #{hasRead,jdbcType=INTEGER}, ",
        "#{intColumn1,jdbcType=INTEGER}, #{intColumn2,jdbcType=INTEGER}, ",
        "#{strColumn1,jdbcType=VARCHAR}, #{strColumn2,jdbcType=VARCHAR})"
    })
    int insert(BsUserComment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bs_user_comment
     *
     * @mbggenerated Thu Jun 01 10:59:28 CST 2017
     */
    @InsertProvider(type=BsUserCommentSqlProvider.class, method="insertSelective")
    int insertSelective(BsUserComment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bs_user_comment
     *
     * @mbggenerated Thu Jun 01 10:59:28 CST 2017
     */
    @SelectProvider(type=BsUserCommentSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.INTEGER),
        @Result(column="comment_time", property="commentTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="commentator_id", property="commentatorId", jdbcType=JdbcType.INTEGER),
        @Result(column="commentator_name", property="commentatorName", jdbcType=JdbcType.VARCHAR),
        @Result(column="comment_level", property="commentLevel", jdbcType=JdbcType.INTEGER),
        @Result(column="content", property="content", jdbcType=JdbcType.VARCHAR),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
        @Result(column="from_type", property="fromType", jdbcType=JdbcType.INTEGER),
        @Result(column="has_read", property="hasRead", jdbcType=JdbcType.INTEGER),
        @Result(column="int_column1", property="intColumn1", jdbcType=JdbcType.INTEGER),
        @Result(column="int_column2", property="intColumn2", jdbcType=JdbcType.INTEGER),
        @Result(column="str_column1", property="strColumn1", jdbcType=JdbcType.VARCHAR),
        @Result(column="str_column2", property="strColumn2", jdbcType=JdbcType.VARCHAR)
    })
    List<BsUserComment> selectByExample(BsUserCommentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bs_user_comment
     *
     * @mbggenerated Thu Jun 01 10:59:28 CST 2017
     */
    @Select({
        "select",
        "id, user_id, comment_time, commentator_id, commentator_name, comment_level, ",
        "content, remark, from_type, has_read, int_column1, int_column2, str_column1, ",
        "str_column2",
        "from bs_user_comment",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.INTEGER),
        @Result(column="comment_time", property="commentTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="commentator_id", property="commentatorId", jdbcType=JdbcType.INTEGER),
        @Result(column="commentator_name", property="commentatorName", jdbcType=JdbcType.VARCHAR),
        @Result(column="comment_level", property="commentLevel", jdbcType=JdbcType.INTEGER),
        @Result(column="content", property="content", jdbcType=JdbcType.VARCHAR),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
        @Result(column="from_type", property="fromType", jdbcType=JdbcType.INTEGER),
        @Result(column="has_read", property="hasRead", jdbcType=JdbcType.INTEGER),
        @Result(column="int_column1", property="intColumn1", jdbcType=JdbcType.INTEGER),
        @Result(column="int_column2", property="intColumn2", jdbcType=JdbcType.INTEGER),
        @Result(column="str_column1", property="strColumn1", jdbcType=JdbcType.VARCHAR),
        @Result(column="str_column2", property="strColumn2", jdbcType=JdbcType.VARCHAR)
    })
    BsUserComment selectByPrimaryKey(BsUserCommentKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bs_user_comment
     *
     * @mbggenerated Thu Jun 01 10:59:28 CST 2017
     */
    @UpdateProvider(type=BsUserCommentSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") BsUserComment record, @Param("example") BsUserCommentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bs_user_comment
     *
     * @mbggenerated Thu Jun 01 10:59:28 CST 2017
     */
    @UpdateProvider(type=BsUserCommentSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") BsUserComment record, @Param("example") BsUserCommentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bs_user_comment
     *
     * @mbggenerated Thu Jun 01 10:59:28 CST 2017
     */
    @UpdateProvider(type=BsUserCommentSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(BsUserComment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bs_user_comment
     *
     * @mbggenerated Thu Jun 01 10:59:28 CST 2017
     */
    @Update({
        "update bs_user_comment",
        "set user_id = #{userId,jdbcType=INTEGER},",
          "comment_time = #{commentTime,jdbcType=TIMESTAMP},",
          "commentator_id = #{commentatorId,jdbcType=INTEGER},",
          "commentator_name = #{commentatorName,jdbcType=VARCHAR},",
          "comment_level = #{commentLevel,jdbcType=INTEGER},",
          "content = #{content,jdbcType=VARCHAR},",
          "remark = #{remark,jdbcType=VARCHAR},",
          "from_type = #{fromType,jdbcType=INTEGER},",
          "has_read = #{hasRead,jdbcType=INTEGER},",
          "int_column1 = #{intColumn1,jdbcType=INTEGER},",
          "int_column2 = #{intColumn2,jdbcType=INTEGER},",
          "str_column1 = #{strColumn1,jdbcType=VARCHAR},",
          "str_column2 = #{strColumn2,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(BsUserComment record);
}