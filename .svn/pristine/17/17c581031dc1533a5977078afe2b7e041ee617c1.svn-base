package lb.rest.user.db.mapper;

import static org.apache.ibatis.jdbc.SqlBuilder.BEGIN;
import static org.apache.ibatis.jdbc.SqlBuilder.DELETE_FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.INSERT_INTO;
import static org.apache.ibatis.jdbc.SqlBuilder.ORDER_BY;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT_DISTINCT;
import static org.apache.ibatis.jdbc.SqlBuilder.SET;
import static org.apache.ibatis.jdbc.SqlBuilder.SQL;
import static org.apache.ibatis.jdbc.SqlBuilder.UPDATE;
import static org.apache.ibatis.jdbc.SqlBuilder.VALUES;
import static org.apache.ibatis.jdbc.SqlBuilder.WHERE;

import java.util.List;
import java.util.Map;
import lb.rest.user.db.entity.MlbuserAddition;
import lb.rest.user.db.entity.MlbuserAdditionExample.Criteria;
import lb.rest.user.db.entity.MlbuserAdditionExample.Criterion;
import lb.rest.user.db.entity.MlbuserAdditionExample;

public class MlbuserAdditionSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mlbuser_addition
     *
     * @mbggenerated Sat Feb 25 19:11:45 CST 2017
     */
    public String countByExample(MlbuserAdditionExample example) {
        BEGIN();
        SELECT("count(*)");
        FROM("mlbuser_addition");
        applyWhere(example, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mlbuser_addition
     *
     * @mbggenerated Sat Feb 25 19:11:45 CST 2017
     */
    public String deleteByExample(MlbuserAdditionExample example) {
        BEGIN();
        DELETE_FROM("mlbuser_addition");
        applyWhere(example, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mlbuser_addition
     *
     * @mbggenerated Sat Feb 25 19:11:45 CST 2017
     */
    public String insertSelective(MlbuserAddition record) {
        BEGIN();
        INSERT_INTO("mlbuser_addition");
        
        if (record.getUserId() != null) {
            VALUES("user_id", "#{userId,jdbcType=INTEGER}");
        }
        
        if (record.getUserCategory() != null) {
            VALUES("user_category", "#{userCategory,jdbcType=INTEGER}");
        }
        
        if (record.getHasInvoice() != null) {
            VALUES("has_invoice", "#{hasInvoice,jdbcType=INTEGER}");
        }
        
        if (record.getHasWarehouse() != null) {
            VALUES("has_warehouse", "#{hasWarehouse,jdbcType=INTEGER}");
        }
        
        if (record.getCompanyName() != null) {
            VALUES("company_name", "#{companyName,jdbcType=VARCHAR}");
        }
        
        if (record.getLegalPerson() != null) {
            VALUES("legal_person", "#{legalPerson,jdbcType=VARCHAR}");
        }
        
        if (record.getWarename() != null) {
            VALUES("warename", "#{warename,jdbcType=VARCHAR}");
        }
        
        if (record.getWareaddress() != null) {
            VALUES("wareaddress", "#{wareaddress,jdbcType=VARCHAR}");
        }
        
        if (record.getWarelocation() != null) {
            VALUES("warelocation", "#{warelocation,jdbcType=INTEGER}");
        }
        
        if (record.getWarelocationdesc() != null) {
            VALUES("warelocationDesc", "#{warelocationdesc,jdbcType=VARCHAR}");
        }
        
        if (record.getOperateYearLimit() != null) {
            VALUES("operate_year_limit", "#{operateYearLimit,jdbcType=INTEGER}");
        }
        
        if (record.getMonthTurnover() != null) {
            VALUES("month_turnover", "#{monthTurnover,jdbcType=INTEGER}");
        }
        
        if (record.getSaleArea() != null) {
            VALUES("sale_area", "#{saleArea,jdbcType=VARCHAR}");
        }
        
        if (record.getHasTower() != null) {
            VALUES("has_tower", "#{hasTower,jdbcType=INTEGER}");
        }
        
        if (record.getPayOnDelivery() != null) {
            VALUES("pay_on_delivery", "#{payOnDelivery,jdbcType=INTEGER}");
        }
        
        if (record.getGrainType() != null) {
            VALUES("grain_type", "#{grainType,jdbcType=INTEGER}");
        }
        
        if (record.getBuyAddress() != null) {
            VALUES("buy_address", "#{buyAddress,jdbcType=VARCHAR}");
        }
        
        if (record.getMonthlyRequire() != null) {
            VALUES("monthly_require", "#{monthlyRequire,jdbcType=INTEGER}");
        }
        
        if (record.getIndustry() != null) {
            VALUES("industry", "#{industry,jdbcType=INTEGER}");
        }
        
        if (record.getAccountPeriod() != null) {
            VALUES("account_period", "#{accountPeriod,jdbcType=INTEGER}");
        }
        
        if (record.getBankName() != null) {
            VALUES("bank_name", "#{bankName,jdbcType=VARCHAR}");
        }
        
        if (record.getBankUserName() != null) {
            VALUES("bank_user_name", "#{bankUserName,jdbcType=VARCHAR}");
        }
        
        if (record.getBankAccountNumber() != null) {
            VALUES("bank_account_number", "#{bankAccountNumber,jdbcType=VARCHAR}");
        }
        
        if (record.getMembershipGroup() != null) {
            VALUES("membership_group", "#{membershipGroup,jdbcType=VARCHAR}");
        }
        
        if (record.getMainUsage() != null) {
            VALUES("main_usage", "#{mainUsage,jdbcType=VARCHAR}");
        }
        
        if (record.getPaymentFlow() != null) {
            VALUES("payment_flow", "#{paymentFlow,jdbcType=VARCHAR}");
        }
        
        if (record.getQuotationMode() != null) {
            VALUES("quotation_mode", "#{quotationMode,jdbcType=INTEGER}");
        }
        
        if (record.getCompanyLocation() != null) {
            VALUES("company_location", "#{companyLocation,jdbcType=INTEGER}");
        }
        
        if (record.getCompanyLocationdesc() != null) {
            VALUES("company_locationDesc", "#{companyLocationdesc,jdbcType=VARCHAR}");
        }
        
        if (record.getCompanyAddress() != null) {
            VALUES("company_address", "#{companyAddress,jdbcType=VARCHAR}");
        }
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mlbuser_addition
     *
     * @mbggenerated Sat Feb 25 19:11:45 CST 2017
     */
    public String selectByExample(MlbuserAdditionExample example) {
        BEGIN();
        if (example != null && example.isDistinct()) {
            SELECT_DISTINCT("user_id");
        } else {
            SELECT("user_id");
        }
        SELECT("user_category");
        SELECT("has_invoice");
        SELECT("has_warehouse");
        SELECT("company_name");
        SELECT("legal_person");
        SELECT("warename");
        SELECT("wareaddress");
        SELECT("warelocation");
        SELECT("warelocationDesc");
        SELECT("operate_year_limit");
        SELECT("month_turnover");
        SELECT("sale_area");
        SELECT("has_tower");
        SELECT("pay_on_delivery");
        SELECT("grain_type");
        SELECT("buy_address");
        SELECT("monthly_require");
        SELECT("industry");
        SELECT("account_period");
        SELECT("bank_name");
        SELECT("bank_user_name");
        SELECT("bank_account_number");
        SELECT("membership_group");
        SELECT("main_usage");
        SELECT("payment_flow");
        SELECT("quotation_mode");
        SELECT("company_location");
        SELECT("company_locationDesc");
        SELECT("company_address");
        FROM("mlbuser_addition");
        applyWhere(example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            ORDER_BY(example.getOrderByClause());
        }
        
        if(example != null){
            return SQL().concat(" limit "+example.getOffset()+","+example.getLimit());
        }
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mlbuser_addition
     *
     * @mbggenerated Sat Feb 25 19:11:45 CST 2017
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        MlbuserAddition record = (MlbuserAddition) parameter.get("record");
        MlbuserAdditionExample example = (MlbuserAdditionExample) parameter.get("example");
        
        BEGIN();
        UPDATE("mlbuser_addition");
        
        if (record.getUserId() != null) {
            SET("user_id = #{record.userId,jdbcType=INTEGER}");
        }
        
        if (record.getUserCategory() != null) {
            SET("user_category = #{record.userCategory,jdbcType=INTEGER}");
        }
        
        if (record.getHasInvoice() != null) {
            SET("has_invoice = #{record.hasInvoice,jdbcType=INTEGER}");
        }
        
        if (record.getHasWarehouse() != null) {
            SET("has_warehouse = #{record.hasWarehouse,jdbcType=INTEGER}");
        }
        
        if (record.getCompanyName() != null) {
            SET("company_name = #{record.companyName,jdbcType=VARCHAR}");
        }
        
        if (record.getLegalPerson() != null) {
            SET("legal_person = #{record.legalPerson,jdbcType=VARCHAR}");
        }
        
        if (record.getWarename() != null) {
            SET("warename = #{record.warename,jdbcType=VARCHAR}");
        }
        
        if (record.getWareaddress() != null) {
            SET("wareaddress = #{record.wareaddress,jdbcType=VARCHAR}");
        }
        
        if (record.getWarelocation() != null) {
            SET("warelocation = #{record.warelocation,jdbcType=INTEGER}");
        }
        
        if (record.getWarelocationdesc() != null) {
            SET("warelocationDesc = #{record.warelocationdesc,jdbcType=VARCHAR}");
        }
        
        if (record.getOperateYearLimit() != null) {
            SET("operate_year_limit = #{record.operateYearLimit,jdbcType=INTEGER}");
        }
        
        if (record.getMonthTurnover() != null) {
            SET("month_turnover = #{record.monthTurnover,jdbcType=INTEGER}");
        }
        
        if (record.getSaleArea() != null) {
            SET("sale_area = #{record.saleArea,jdbcType=VARCHAR}");
        }
        
        if (record.getHasTower() != null) {
            SET("has_tower = #{record.hasTower,jdbcType=INTEGER}");
        }
        
        if (record.getPayOnDelivery() != null) {
            SET("pay_on_delivery = #{record.payOnDelivery,jdbcType=INTEGER}");
        }
        
        if (record.getGrainType() != null) {
            SET("grain_type = #{record.grainType,jdbcType=INTEGER}");
        }
        
        if (record.getBuyAddress() != null) {
            SET("buy_address = #{record.buyAddress,jdbcType=VARCHAR}");
        }
        
        if (record.getMonthlyRequire() != null) {
            SET("monthly_require = #{record.monthlyRequire,jdbcType=INTEGER}");
        }
        
        if (record.getIndustry() != null) {
            SET("industry = #{record.industry,jdbcType=INTEGER}");
        }
        
        if (record.getAccountPeriod() != null) {
            SET("account_period = #{record.accountPeriod,jdbcType=INTEGER}");
        }
        
        if (record.getBankName() != null) {
            SET("bank_name = #{record.bankName,jdbcType=VARCHAR}");
        }
        
        if (record.getBankUserName() != null) {
            SET("bank_user_name = #{record.bankUserName,jdbcType=VARCHAR}");
        }
        
        if (record.getBankAccountNumber() != null) {
            SET("bank_account_number = #{record.bankAccountNumber,jdbcType=VARCHAR}");
        }
        
        if (record.getMembershipGroup() != null) {
            SET("membership_group = #{record.membershipGroup,jdbcType=VARCHAR}");
        }
        
        if (record.getMainUsage() != null) {
            SET("main_usage = #{record.mainUsage,jdbcType=VARCHAR}");
        }
        
        if (record.getPaymentFlow() != null) {
            SET("payment_flow = #{record.paymentFlow,jdbcType=VARCHAR}");
        }
        
        if (record.getQuotationMode() != null) {
            SET("quotation_mode = #{record.quotationMode,jdbcType=INTEGER}");
        }
        
        if (record.getCompanyLocation() != null) {
            SET("company_location = #{record.companyLocation,jdbcType=INTEGER}");
        }
        
        if (record.getCompanyLocationdesc() != null) {
            SET("company_locationDesc = #{record.companyLocationdesc,jdbcType=VARCHAR}");
        }
        
        if (record.getCompanyAddress() != null) {
            SET("company_address = #{record.companyAddress,jdbcType=VARCHAR}");
        }
        
        applyWhere(example, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mlbuser_addition
     *
     * @mbggenerated Sat Feb 25 19:11:45 CST 2017
     */
    public String updateByExample(Map<String, Object> parameter) {
        BEGIN();
        UPDATE("mlbuser_addition");
        
        SET("user_id = #{record.userId,jdbcType=INTEGER}");
        SET("user_category = #{record.userCategory,jdbcType=INTEGER}");
        SET("has_invoice = #{record.hasInvoice,jdbcType=INTEGER}");
        SET("has_warehouse = #{record.hasWarehouse,jdbcType=INTEGER}");
        SET("company_name = #{record.companyName,jdbcType=VARCHAR}");
        SET("legal_person = #{record.legalPerson,jdbcType=VARCHAR}");
        SET("warename = #{record.warename,jdbcType=VARCHAR}");
        SET("wareaddress = #{record.wareaddress,jdbcType=VARCHAR}");
        SET("warelocation = #{record.warelocation,jdbcType=INTEGER}");
        SET("warelocationDesc = #{record.warelocationdesc,jdbcType=VARCHAR}");
        SET("operate_year_limit = #{record.operateYearLimit,jdbcType=INTEGER}");
        SET("month_turnover = #{record.monthTurnover,jdbcType=INTEGER}");
        SET("sale_area = #{record.saleArea,jdbcType=VARCHAR}");
        SET("has_tower = #{record.hasTower,jdbcType=INTEGER}");
        SET("pay_on_delivery = #{record.payOnDelivery,jdbcType=INTEGER}");
        SET("grain_type = #{record.grainType,jdbcType=INTEGER}");
        SET("buy_address = #{record.buyAddress,jdbcType=VARCHAR}");
        SET("monthly_require = #{record.monthlyRequire,jdbcType=INTEGER}");
        SET("industry = #{record.industry,jdbcType=INTEGER}");
        SET("account_period = #{record.accountPeriod,jdbcType=INTEGER}");
        SET("bank_name = #{record.bankName,jdbcType=VARCHAR}");
        SET("bank_user_name = #{record.bankUserName,jdbcType=VARCHAR}");
        SET("bank_account_number = #{record.bankAccountNumber,jdbcType=VARCHAR}");
        SET("membership_group = #{record.membershipGroup,jdbcType=VARCHAR}");
        SET("main_usage = #{record.mainUsage,jdbcType=VARCHAR}");
        SET("payment_flow = #{record.paymentFlow,jdbcType=VARCHAR}");
        SET("quotation_mode = #{record.quotationMode,jdbcType=INTEGER}");
        SET("company_location = #{record.companyLocation,jdbcType=INTEGER}");
        SET("company_locationDesc = #{record.companyLocationdesc,jdbcType=VARCHAR}");
        SET("company_address = #{record.companyAddress,jdbcType=VARCHAR}");
        
        MlbuserAdditionExample example = (MlbuserAdditionExample) parameter.get("example");
        applyWhere(example, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mlbuser_addition
     *
     * @mbggenerated Sat Feb 25 19:11:45 CST 2017
     */
    public String updateByPrimaryKeySelective(MlbuserAddition record) {
        BEGIN();
        UPDATE("mlbuser_addition");
        
        if (record.getUserCategory() != null) {
            SET("user_category = #{userCategory,jdbcType=INTEGER}");
        }
        
        if (record.getHasInvoice() != null) {
            SET("has_invoice = #{hasInvoice,jdbcType=INTEGER}");
        }
        
        if (record.getHasWarehouse() != null) {
            SET("has_warehouse = #{hasWarehouse,jdbcType=INTEGER}");
        }
        
        if (record.getCompanyName() != null) {
            SET("company_name = #{companyName,jdbcType=VARCHAR}");
        }
        
        if (record.getLegalPerson() != null) {
            SET("legal_person = #{legalPerson,jdbcType=VARCHAR}");
        }
        
        if (record.getWarename() != null) {
            SET("warename = #{warename,jdbcType=VARCHAR}");
        }
        
        if (record.getWareaddress() != null) {
            SET("wareaddress = #{wareaddress,jdbcType=VARCHAR}");
        }
        
        if (record.getWarelocation() != null) {
            SET("warelocation = #{warelocation,jdbcType=INTEGER}");
        }
        
        if (record.getWarelocationdesc() != null) {
            SET("warelocationDesc = #{warelocationdesc,jdbcType=VARCHAR}");
        }
        
        if (record.getOperateYearLimit() != null) {
            SET("operate_year_limit = #{operateYearLimit,jdbcType=INTEGER}");
        }
        
        if (record.getMonthTurnover() != null) {
            SET("month_turnover = #{monthTurnover,jdbcType=INTEGER}");
        }
        
        if (record.getSaleArea() != null) {
            SET("sale_area = #{saleArea,jdbcType=VARCHAR}");
        }
        
        if (record.getHasTower() != null) {
            SET("has_tower = #{hasTower,jdbcType=INTEGER}");
        }
        
        if (record.getPayOnDelivery() != null) {
            SET("pay_on_delivery = #{payOnDelivery,jdbcType=INTEGER}");
        }
        
        if (record.getGrainType() != null) {
            SET("grain_type = #{grainType,jdbcType=INTEGER}");
        }
        
        if (record.getBuyAddress() != null) {
            SET("buy_address = #{buyAddress,jdbcType=VARCHAR}");
        }
        
        if (record.getMonthlyRequire() != null) {
            SET("monthly_require = #{monthlyRequire,jdbcType=INTEGER}");
        }
        
        if (record.getIndustry() != null) {
            SET("industry = #{industry,jdbcType=INTEGER}");
        }
        
        if (record.getAccountPeriod() != null) {
            SET("account_period = #{accountPeriod,jdbcType=INTEGER}");
        }
        
        if (record.getBankName() != null) {
            SET("bank_name = #{bankName,jdbcType=VARCHAR}");
        }
        
        if (record.getBankUserName() != null) {
            SET("bank_user_name = #{bankUserName,jdbcType=VARCHAR}");
        }
        
        if (record.getBankAccountNumber() != null) {
            SET("bank_account_number = #{bankAccountNumber,jdbcType=VARCHAR}");
        }
        
        if (record.getMembershipGroup() != null) {
            SET("membership_group = #{membershipGroup,jdbcType=VARCHAR}");
        }
        
        if (record.getMainUsage() != null) {
            SET("main_usage = #{mainUsage,jdbcType=VARCHAR}");
        }
        
        if (record.getPaymentFlow() != null) {
            SET("payment_flow = #{paymentFlow,jdbcType=VARCHAR}");
        }
        
        if (record.getQuotationMode() != null) {
            SET("quotation_mode = #{quotationMode,jdbcType=INTEGER}");
        }
        
        if (record.getCompanyLocation() != null) {
            SET("company_location = #{companyLocation,jdbcType=INTEGER}");
        }
        
        if (record.getCompanyLocationdesc() != null) {
            SET("company_locationDesc = #{companyLocationdesc,jdbcType=VARCHAR}");
        }
        
        if (record.getCompanyAddress() != null) {
            SET("company_address = #{companyAddress,jdbcType=VARCHAR}");
        }
        
        WHERE("user_id = #{userId,jdbcType=INTEGER}");
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mlbuser_addition
     *
     * @mbggenerated Sat Feb 25 19:11:45 CST 2017
     */
    protected void applyWhere(MlbuserAdditionExample example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            WHERE(sb.toString());
        }
    }
}