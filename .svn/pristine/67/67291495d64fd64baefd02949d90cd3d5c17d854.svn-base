package lb.rest.user.db.mapper;

import static org.apache.ibatis.jdbc.SqlBuilder.BEGIN;
import static org.apache.ibatis.jdbc.SqlBuilder.DELETE_FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.INSERT_INTO;
import static org.apache.ibatis.jdbc.SqlBuilder.ORDER_BY;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT_DISTINCT;
import static org.apache.ibatis.jdbc.SqlBuilder.SET;
import static org.apache.ibatis.jdbc.SqlBuilder.SQL;
import static org.apache.ibatis.jdbc.SqlBuilder.UPDATE;
import static org.apache.ibatis.jdbc.SqlBuilder.VALUES;
import static org.apache.ibatis.jdbc.SqlBuilder.WHERE;

import java.util.List;
import java.util.Map;

import lb.rest.user.db.entity.CommonAttr;
import lb.rest.user.db.entity.CommonAttrExample;
import lb.rest.user.db.entity.CommonAttrExample.Criteria;
import lb.rest.user.db.entity.CommonAttrExample.Criterion;

public class CommonAttrSqlProvider {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	public String countByExample(CommonAttrExample example) {
		BEGIN();
		SELECT("count(*)");
		FROM("common_attr");
		applyWhere(example, false);
		return SQL();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	public String deleteByExample(CommonAttrExample example) {
		BEGIN();
		DELETE_FROM("common_attr");
		applyWhere(example, false);
		return SQL();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	public String insertSelective(CommonAttr record) {
		BEGIN();
		INSERT_INTO("common_attr");

		if (record.getAttrid() != null) {
			VALUES("attrId", "#{attrid,jdbcType=INTEGER}");
		}

		if (record.getAttrname() != null) {
			VALUES("attrName", "#{attrname,jdbcType=VARCHAR}");
		}

		if (record.getTypeid() != null) {
			VALUES("typeId", "#{typeid,jdbcType=INTEGER}");
		}

		if (record.getIsavailable() != null) {
			VALUES("isAvailable", "#{isavailable,jdbcType=INTEGER}");
		}

		if (record.getCreatetime() != null) {
			VALUES("createTime", "#{createtime,jdbcType=TIMESTAMP}");
		}

		if (record.getSort() != null) {
			VALUES("sort", "#{sort,jdbcType=INTEGER}");
		}

		if (record.getRule() != null) {
			VALUES("rule", "#{rule,jdbcType=VARCHAR}");
		}

		if (record.getWeight() != null) {
			VALUES("weight", "#{weight,jdbcType=DOUBLE}");
		}

		return SQL();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	public String selectByExample(CommonAttrExample example) {
		BEGIN();
		if (example != null && example.isDistinct()) {
			SELECT_DISTINCT("attrId");
		} else {
			SELECT("attrId");
		}
		SELECT("attrName");
		SELECT("typeId");
		SELECT("isAvailable");
		SELECT("createTime");
		SELECT("sort");
		SELECT("rule");
		SELECT("weight");
		FROM("common_attr");
		applyWhere(example, false);

		if (example != null && example.getOrderByClause() != null) {
			ORDER_BY(example.getOrderByClause());
		}

		if (example != null) {
			return SQL().concat(" limit " + example.getOffset() + "," + example.getLimit());
		}
		return SQL();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	public String updateByExampleSelective(Map<String, Object> parameter) {
		CommonAttr record = (CommonAttr) parameter.get("record");
		CommonAttrExample example = (CommonAttrExample) parameter.get("example");

		BEGIN();
		UPDATE("common_attr");

		if (record.getAttrid() != null) {
			SET("attrId = #{record.attrid,jdbcType=INTEGER}");
		}

		if (record.getAttrname() != null) {
			SET("attrName = #{record.attrname,jdbcType=VARCHAR}");
		}

		if (record.getTypeid() != null) {
			SET("typeId = #{record.typeid,jdbcType=INTEGER}");
		}

		if (record.getIsavailable() != null) {
			SET("isAvailable = #{record.isavailable,jdbcType=INTEGER}");
		}

		if (record.getCreatetime() != null) {
			SET("createTime = #{record.createtime,jdbcType=TIMESTAMP}");
		}

		if (record.getSort() != null) {
			SET("sort = #{record.sort,jdbcType=INTEGER}");
		}

		if (record.getRule() != null) {
			SET("rule = #{record.rule,jdbcType=VARCHAR}");
		}

		if (record.getWeight() != null) {
			SET("weight = #{record.weight,jdbcType=DOUBLE}");
		}

		applyWhere(example, true);
		return SQL();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	public String updateByExample(Map<String, Object> parameter) {
		BEGIN();
		UPDATE("common_attr");

		SET("attrId = #{record.attrid,jdbcType=INTEGER}");
		SET("attrName = #{record.attrname,jdbcType=VARCHAR}");
		SET("typeId = #{record.typeid,jdbcType=INTEGER}");
		SET("isAvailable = #{record.isavailable,jdbcType=INTEGER}");
		SET("createTime = #{record.createtime,jdbcType=TIMESTAMP}");
		SET("sort = #{record.sort,jdbcType=INTEGER}");
		SET("rule = #{record.rule,jdbcType=VARCHAR}");
		SET("weight = #{record.weight,jdbcType=DOUBLE}");

		CommonAttrExample example = (CommonAttrExample) parameter.get("example");
		applyWhere(example, true);
		return SQL();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	public String updateByPrimaryKeySelective(CommonAttr record) {
		BEGIN();
		UPDATE("common_attr");

		if (record.getAttrname() != null) {
			SET("attrName = #{attrname,jdbcType=VARCHAR}");
		}

		if (record.getTypeid() != null) {
			SET("typeId = #{typeid,jdbcType=INTEGER}");
		}

		if (record.getIsavailable() != null) {
			SET("isAvailable = #{isavailable,jdbcType=INTEGER}");
		}

		if (record.getCreatetime() != null) {
			SET("createTime = #{createtime,jdbcType=TIMESTAMP}");
		}

		if (record.getSort() != null) {
			SET("sort = #{sort,jdbcType=INTEGER}");
		}

		if (record.getRule() != null) {
			SET("rule = #{rule,jdbcType=VARCHAR}");
		}

		if (record.getWeight() != null) {
			SET("weight = #{weight,jdbcType=DOUBLE}");
		}

		WHERE("attrId = #{attrid,jdbcType=INTEGER}");

		return SQL();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	protected void applyWhere(CommonAttrExample example, boolean includeExamplePhrase) {
		if (example == null) {
			return;
		}

		String parmPhrase1;
		String parmPhrase1_th;
		String parmPhrase2;
		String parmPhrase2_th;
		String parmPhrase3;
		String parmPhrase3_th;
		if (includeExamplePhrase) {
			parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
			parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
			parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
			parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
			parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
			parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
		} else {
			parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
			parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
			parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
			parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
			parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
			parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
		}

		StringBuilder sb = new StringBuilder();
		List<Criteria> oredCriteria = example.getOredCriteria();
		boolean firstCriteria = true;
		for (int i = 0; i < oredCriteria.size(); i++) {
			Criteria criteria = oredCriteria.get(i);
			if (criteria.isValid()) {
				if (firstCriteria) {
					firstCriteria = false;
				} else {
					sb.append(" or ");
				}

				sb.append('(');
				List<Criterion> criterions = criteria.getAllCriteria();
				boolean firstCriterion = true;
				for (int j = 0; j < criterions.size(); j++) {
					Criterion criterion = criterions.get(j);
					if (firstCriterion) {
						firstCriterion = false;
					} else {
						sb.append(" and ");
					}

					if (criterion.isNoValue()) {
						sb.append(criterion.getCondition());
					} else if (criterion.isSingleValue()) {
						if (criterion.getTypeHandler() == null) {
							sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
						} else {
							sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,
									criterion.getTypeHandler()));
						}
					} else if (criterion.isBetweenValue()) {
						if (criterion.getTypeHandler() == null) {
							sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
						} else {
							sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j,
									criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
						}
					} else if (criterion.isListValue()) {
						sb.append(criterion.getCondition());
						sb.append(" (");
						List<?> listItems = (List<?>) criterion.getValue();
						boolean comma = false;
						for (int k = 0; k < listItems.size(); k++) {
							if (comma) {
								sb.append(", ");
							} else {
								comma = true;
							}
							if (criterion.getTypeHandler() == null) {
								sb.append(String.format(parmPhrase3, i, j, k));
							} else {
								sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
							}
						}
						sb.append(')');
					}
				}
				sb.append(')');
			}
		}

		if (sb.length() > 0) {
			WHERE(sb.toString());
		}
	}
}