package lb.rest.trade.db.mapper;

import fc.wpf.rest.db.iface.StaticTableDaoSupport;
import java.util.List;
import lb.rest.trade.db.entity.BsUserRequireMatch;
import lb.rest.trade.db.entity.BsUserRequireMatchExample;
import lb.rest.trade.db.entity.BsUserRequireMatchKey;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface BsUserRequireMatchMapper extends StaticTableDaoSupport<BsUserRequireMatch, BsUserRequireMatchExample, BsUserRequireMatchKey> {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bs_user_require_match
     *
     * @mbggenerated Thu Feb 16 18:05:52 CST 2017
     */
    @SelectProvider(type=BsUserRequireMatchSqlProvider.class, method="countByExample")
    int countByExample(BsUserRequireMatchExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bs_user_require_match
     *
     * @mbggenerated Thu Feb 16 18:05:52 CST 2017
     */
    @DeleteProvider(type=BsUserRequireMatchSqlProvider.class, method="deleteByExample")
    int deleteByExample(BsUserRequireMatchExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bs_user_require_match
     *
     * @mbggenerated Thu Feb 16 18:05:52 CST 2017
     */
    @Delete({
        "delete from bs_user_require_match",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(BsUserRequireMatchKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bs_user_require_match
     *
     * @mbggenerated Thu Feb 16 18:05:52 CST 2017
     */
    @Insert({
        "insert into bs_user_require_match (id, process_status, ",
        "require_id, match_goods_id, ",
        "reality_buy_price_type, reality_sell_price_type, ",
        "reality_buy_price, reality_sell_price, ",
        "reality_buy_pay_method, reality_sell_pay_method, ",
        "reality_buy_require, reality_sell_require, ",
        "reality_logistics_info, abandon_reason_code, ",
        "abandon_reason, modify_time, ",
        "complete_time)",
        "values (#{id,jdbcType=BIGINT}, #{processStatus,jdbcType=INTEGER}, ",
        "#{requireId,jdbcType=BIGINT}, #{matchGoodsId,jdbcType=INTEGER}, ",
        "#{realityBuyPriceType,jdbcType=INTEGER}, #{realitySellPriceType,jdbcType=INTEGER}, ",
        "#{realityBuyPrice,jdbcType=DOUBLE}, #{realitySellPrice,jdbcType=DOUBLE}, ",
        "#{realityBuyPayMethod,jdbcType=INTEGER}, #{realitySellPayMethod,jdbcType=INTEGER}, ",
        "#{realityBuyRequire,jdbcType=VARCHAR}, #{realitySellRequire,jdbcType=VARCHAR}, ",
        "#{realityLogisticsInfo,jdbcType=VARCHAR}, #{abandonReasonCode,jdbcType=INTEGER}, ",
        "#{abandonReason,jdbcType=VARCHAR}, #{modifyTime,jdbcType=TIMESTAMP}, ",
        "#{completeTime,jdbcType=TIMESTAMP})"
    })
    int insert(BsUserRequireMatch record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bs_user_require_match
     *
     * @mbggenerated Thu Feb 16 18:05:52 CST 2017
     */
    @InsertProvider(type=BsUserRequireMatchSqlProvider.class, method="insertSelective")
    int insertSelective(BsUserRequireMatch record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bs_user_require_match
     *
     * @mbggenerated Thu Feb 16 18:05:52 CST 2017
     */
    @SelectProvider(type=BsUserRequireMatchSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="process_status", property="processStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="require_id", property="requireId", jdbcType=JdbcType.BIGINT),
        @Result(column="match_goods_id", property="matchGoodsId", jdbcType=JdbcType.INTEGER),
        @Result(column="reality_buy_price_type", property="realityBuyPriceType", jdbcType=JdbcType.INTEGER),
        @Result(column="reality_sell_price_type", property="realitySellPriceType", jdbcType=JdbcType.INTEGER),
        @Result(column="reality_buy_price", property="realityBuyPrice", jdbcType=JdbcType.DOUBLE),
        @Result(column="reality_sell_price", property="realitySellPrice", jdbcType=JdbcType.DOUBLE),
        @Result(column="reality_buy_pay_method", property="realityBuyPayMethod", jdbcType=JdbcType.INTEGER),
        @Result(column="reality_sell_pay_method", property="realitySellPayMethod", jdbcType=JdbcType.INTEGER),
        @Result(column="reality_buy_require", property="realityBuyRequire", jdbcType=JdbcType.VARCHAR),
        @Result(column="reality_sell_require", property="realitySellRequire", jdbcType=JdbcType.VARCHAR),
        @Result(column="reality_logistics_info", property="realityLogisticsInfo", jdbcType=JdbcType.VARCHAR),
        @Result(column="abandon_reason_code", property="abandonReasonCode", jdbcType=JdbcType.INTEGER),
        @Result(column="abandon_reason", property="abandonReason", jdbcType=JdbcType.VARCHAR),
        @Result(column="modify_time", property="modifyTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="complete_time", property="completeTime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<BsUserRequireMatch> selectByExample(BsUserRequireMatchExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bs_user_require_match
     *
     * @mbggenerated Thu Feb 16 18:05:52 CST 2017
     */
    @Select({
        "select",
        "id, process_status, require_id, match_goods_id, reality_buy_price_type, reality_sell_price_type, ",
        "reality_buy_price, reality_sell_price, reality_buy_pay_method, reality_sell_pay_method, ",
        "reality_buy_require, reality_sell_require, reality_logistics_info, abandon_reason_code, ",
        "abandon_reason, modify_time, complete_time",
        "from bs_user_require_match",
        "where id = #{id,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="process_status", property="processStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="require_id", property="requireId", jdbcType=JdbcType.BIGINT),
        @Result(column="match_goods_id", property="matchGoodsId", jdbcType=JdbcType.INTEGER),
        @Result(column="reality_buy_price_type", property="realityBuyPriceType", jdbcType=JdbcType.INTEGER),
        @Result(column="reality_sell_price_type", property="realitySellPriceType", jdbcType=JdbcType.INTEGER),
        @Result(column="reality_buy_price", property="realityBuyPrice", jdbcType=JdbcType.DOUBLE),
        @Result(column="reality_sell_price", property="realitySellPrice", jdbcType=JdbcType.DOUBLE),
        @Result(column="reality_buy_pay_method", property="realityBuyPayMethod", jdbcType=JdbcType.INTEGER),
        @Result(column="reality_sell_pay_method", property="realitySellPayMethod", jdbcType=JdbcType.INTEGER),
        @Result(column="reality_buy_require", property="realityBuyRequire", jdbcType=JdbcType.VARCHAR),
        @Result(column="reality_sell_require", property="realitySellRequire", jdbcType=JdbcType.VARCHAR),
        @Result(column="reality_logistics_info", property="realityLogisticsInfo", jdbcType=JdbcType.VARCHAR),
        @Result(column="abandon_reason_code", property="abandonReasonCode", jdbcType=JdbcType.INTEGER),
        @Result(column="abandon_reason", property="abandonReason", jdbcType=JdbcType.VARCHAR),
        @Result(column="modify_time", property="modifyTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="complete_time", property="completeTime", jdbcType=JdbcType.TIMESTAMP)
    })
    BsUserRequireMatch selectByPrimaryKey(BsUserRequireMatchKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bs_user_require_match
     *
     * @mbggenerated Thu Feb 16 18:05:52 CST 2017
     */
    @UpdateProvider(type=BsUserRequireMatchSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") BsUserRequireMatch record, @Param("example") BsUserRequireMatchExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bs_user_require_match
     *
     * @mbggenerated Thu Feb 16 18:05:52 CST 2017
     */
    @UpdateProvider(type=BsUserRequireMatchSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") BsUserRequireMatch record, @Param("example") BsUserRequireMatchExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bs_user_require_match
     *
     * @mbggenerated Thu Feb 16 18:05:52 CST 2017
     */
    @UpdateProvider(type=BsUserRequireMatchSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(BsUserRequireMatch record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bs_user_require_match
     *
     * @mbggenerated Thu Feb 16 18:05:52 CST 2017
     */
    @Update({
        "update bs_user_require_match",
        "set process_status = #{processStatus,jdbcType=INTEGER},",
          "require_id = #{requireId,jdbcType=BIGINT},",
          "match_goods_id = #{matchGoodsId,jdbcType=INTEGER},",
          "reality_buy_price_type = #{realityBuyPriceType,jdbcType=INTEGER},",
          "reality_sell_price_type = #{realitySellPriceType,jdbcType=INTEGER},",
          "reality_buy_price = #{realityBuyPrice,jdbcType=DOUBLE},",
          "reality_sell_price = #{realitySellPrice,jdbcType=DOUBLE},",
          "reality_buy_pay_method = #{realityBuyPayMethod,jdbcType=INTEGER},",
          "reality_sell_pay_method = #{realitySellPayMethod,jdbcType=INTEGER},",
          "reality_buy_require = #{realityBuyRequire,jdbcType=VARCHAR},",
          "reality_sell_require = #{realitySellRequire,jdbcType=VARCHAR},",
          "reality_logistics_info = #{realityLogisticsInfo,jdbcType=VARCHAR},",
          "abandon_reason_code = #{abandonReasonCode,jdbcType=INTEGER},",
          "abandon_reason = #{abandonReason,jdbcType=VARCHAR},",
          "modify_time = #{modifyTime,jdbcType=TIMESTAMP},",
          "complete_time = #{completeTime,jdbcType=TIMESTAMP}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(BsUserRequireMatch record);
}