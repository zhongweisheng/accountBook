package lb.rest.trade.db.mapper;

import java.util.List;

import lb.rest.trade.db.entity.BsGoodsInfo;
import lb.rest.trade.db.entity.BsGoodsInfoExample;
import lb.rest.trade.db.entity.BsGoodsInfoKey;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

import fc.wpf.rest.db.iface.StaticTableDaoSupport;

public interface BsGoodsInfoMapper extends StaticTableDaoSupport<BsGoodsInfo, BsGoodsInfoExample, BsGoodsInfoKey> {
	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table bs_goods_info
	 *
	 * @mbggenerated Fri Feb 24 18:06:23 CST 2017
	 */
	@SelectProvider(type = BsGoodsInfoSqlProvider.class, method = "countByExample")
	int countByExample(BsGoodsInfoExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table bs_goods_info
	 *
	 * @mbggenerated Fri Feb 24 18:06:23 CST 2017
	 */
	@DeleteProvider(type = BsGoodsInfoSqlProvider.class, method = "deleteByExample")
	int deleteByExample(BsGoodsInfoExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table bs_goods_info
	 *
	 * @mbggenerated Fri Feb 24 18:06:23 CST 2017
	 */
	@Delete({ "delete from bs_goods_info", "where id = #{id,jdbcType=BIGINT}" })
	int deleteByPrimaryKey(BsGoodsInfoKey key);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table bs_goods_info
	 *
	 * @mbggenerated Fri Feb 24 18:06:23 CST 2017
	 */
	@Insert({ "insert into bs_goods_info (id, process_status, ", "check_service_status, service_type, ",
			"user_id, user_name, ", "address, user_phone, ", "food_type, food_price, ", "food_num, food_require, ",
			"location, location_desc, ", "check_status, check_user_id, ", "check_user_name, check_user_time, ",
			"food_source, has_invoice, ", "price_type, pay_method, ", "abandon_reason_code, abandon_reason, ",
			"remark, operate_user_id, ", "opearate_user_name, view_count, ", "create_time, modify_time, ",
			"auth_status, has_logistics, ", "grain_level, category, ", "create_userid, create_username, ",
			"column1, column2)", "values (#{id,jdbcType=BIGINT}, #{processStatus,jdbcType=INTEGER}, ",
			"#{checkServiceStatus,jdbcType=INTEGER}, #{serviceType,jdbcType=INTEGER}, ",
			"#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, ",
			"#{address,jdbcType=VARCHAR}, #{userPhone,jdbcType=VARCHAR}, ",
			"#{foodType,jdbcType=INTEGER}, #{foodPrice,jdbcType=DOUBLE}, ",
			"#{foodNum,jdbcType=DOUBLE}, #{foodRequire,jdbcType=VARCHAR}, ",
			"#{location,jdbcType=INTEGER}, #{locationDesc,jdbcType=VARCHAR}, ",
			"#{checkStatus,jdbcType=INTEGER}, #{checkUserId,jdbcType=INTEGER}, ",
			"#{checkUserName,jdbcType=VARCHAR}, #{checkUserTime,jdbcType=TIMESTAMP}, ",
			"#{foodSource,jdbcType=VARCHAR}, #{hasInvoice,jdbcType=INTEGER}, ",
			"#{priceType,jdbcType=INTEGER}, #{payMethod,jdbcType=INTEGER}, ",
			"#{abandonReasonCode,jdbcType=INTEGER}, #{abandonReason,jdbcType=VARCHAR}, ",
			"#{remark,jdbcType=VARCHAR}, #{operateUserId,jdbcType=INTEGER}, ",
			"#{opearateUserName,jdbcType=VARCHAR}, #{viewCount,jdbcType=INTEGER}, ",
			"#{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}, ",
			"#{authStatus,jdbcType=INTEGER}, #{hasLogistics,jdbcType=INTEGER}, ",
			"#{grainLevel,jdbcType=INTEGER}, #{category,jdbcType=INTEGER}, ",
			"#{createUserid,jdbcType=INTEGER}, #{createUsername,jdbcType=VARCHAR}, ",
			"#{column1,jdbcType=VARCHAR}, #{column2,jdbcType=VARCHAR})" })
	int insert(BsGoodsInfo record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table bs_goods_info
	 *
	 * @mbggenerated Fri Feb 24 18:06:23 CST 2017
	 */
	@InsertProvider(type = BsGoodsInfoSqlProvider.class, method = "insertSelective")
	int insertSelective(BsGoodsInfo record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table bs_goods_info
	 *
	 * @mbggenerated Fri Feb 24 18:06:23 CST 2017
	 */
	@SelectProvider(type = BsGoodsInfoSqlProvider.class, method = "selectByExample")
	@Results({ @Result(column = "id", property = "id", jdbcType = JdbcType.BIGINT, id = true),
			@Result(column = "process_status", property = "processStatus", jdbcType = JdbcType.INTEGER),
			@Result(column = "check_service_status", property = "checkServiceStatus", jdbcType = JdbcType.INTEGER),
			@Result(column = "service_type", property = "serviceType", jdbcType = JdbcType.INTEGER),
			@Result(column = "user_id", property = "userId", jdbcType = JdbcType.INTEGER),
			@Result(column = "user_name", property = "userName", jdbcType = JdbcType.VARCHAR),
			@Result(column = "address", property = "address", jdbcType = JdbcType.VARCHAR),
			@Result(column = "user_phone", property = "userPhone", jdbcType = JdbcType.VARCHAR),
			@Result(column = "food_type", property = "foodType", jdbcType = JdbcType.INTEGER),
			@Result(column = "food_price", property = "foodPrice", jdbcType = JdbcType.DOUBLE),
			@Result(column = "food_num", property = "foodNum", jdbcType = JdbcType.DOUBLE),
			@Result(column = "food_require", property = "foodRequire", jdbcType = JdbcType.VARCHAR),
			@Result(column = "location", property = "location", jdbcType = JdbcType.INTEGER),
			@Result(column = "location_desc", property = "locationDesc", jdbcType = JdbcType.VARCHAR),
			@Result(column = "check_status", property = "checkStatus", jdbcType = JdbcType.INTEGER),
			@Result(column = "check_user_id", property = "checkUserId", jdbcType = JdbcType.INTEGER),
			@Result(column = "check_user_name", property = "checkUserName", jdbcType = JdbcType.VARCHAR),
			@Result(column = "check_user_time", property = "checkUserTime", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "food_source", property = "foodSource", jdbcType = JdbcType.VARCHAR),
			@Result(column = "has_invoice", property = "hasInvoice", jdbcType = JdbcType.INTEGER),
			@Result(column = "price_type", property = "priceType", jdbcType = JdbcType.INTEGER),
			@Result(column = "pay_method", property = "payMethod", jdbcType = JdbcType.INTEGER),
			@Result(column = "abandon_reason_code", property = "abandonReasonCode", jdbcType = JdbcType.INTEGER),
			@Result(column = "abandon_reason", property = "abandonReason", jdbcType = JdbcType.VARCHAR),
			@Result(column = "remark", property = "remark", jdbcType = JdbcType.VARCHAR),
			@Result(column = "operate_user_id", property = "operateUserId", jdbcType = JdbcType.INTEGER),
			@Result(column = "opearate_user_name", property = "opearateUserName", jdbcType = JdbcType.VARCHAR),
			@Result(column = "view_count", property = "viewCount", jdbcType = JdbcType.INTEGER),
			@Result(column = "create_time", property = "createTime", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "modify_time", property = "modifyTime", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "auth_status", property = "authStatus", jdbcType = JdbcType.INTEGER),
			@Result(column = "has_logistics", property = "hasLogistics", jdbcType = JdbcType.INTEGER),
			@Result(column = "grain_level", property = "grainLevel", jdbcType = JdbcType.INTEGER),
			@Result(column = "category", property = "category", jdbcType = JdbcType.INTEGER),
			@Result(column = "create_userid", property = "createUserid", jdbcType = JdbcType.INTEGER),
			@Result(column = "create_username", property = "createUsername", jdbcType = JdbcType.VARCHAR),
			@Result(column = "column1", property = "column1", jdbcType = JdbcType.VARCHAR),
			@Result(column = "column2", property = "column2", jdbcType = JdbcType.VARCHAR) })
	List<BsGoodsInfo> selectByExample(BsGoodsInfoExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table bs_goods_info
	 *
	 * @mbggenerated Fri Feb 24 18:06:23 CST 2017
	 */
	@Select({ "select", "id, process_status, check_service_status, service_type, user_id, user_name, ",
			"address, user_phone, food_type, food_price, food_num, food_require, location, ",
			"location_desc, check_status, check_user_id, check_user_name, check_user_time, ",
			"food_source, has_invoice, price_type, pay_method, abandon_reason_code, abandon_reason, ",
			"remark, operate_user_id, opearate_user_name, view_count, create_time, modify_time, ",
			"auth_status, has_logistics, grain_level, category, create_userid, create_username, ", "column1, column2",
			"from bs_goods_info", "where id = #{id,jdbcType=BIGINT}" })
	@Results({ @Result(column = "id", property = "id", jdbcType = JdbcType.BIGINT, id = true),
			@Result(column = "process_status", property = "processStatus", jdbcType = JdbcType.INTEGER),
			@Result(column = "check_service_status", property = "checkServiceStatus", jdbcType = JdbcType.INTEGER),
			@Result(column = "service_type", property = "serviceType", jdbcType = JdbcType.INTEGER),
			@Result(column = "user_id", property = "userId", jdbcType = JdbcType.INTEGER),
			@Result(column = "user_name", property = "userName", jdbcType = JdbcType.VARCHAR),
			@Result(column = "address", property = "address", jdbcType = JdbcType.VARCHAR),
			@Result(column = "user_phone", property = "userPhone", jdbcType = JdbcType.VARCHAR),
			@Result(column = "food_type", property = "foodType", jdbcType = JdbcType.INTEGER),
			@Result(column = "food_price", property = "foodPrice", jdbcType = JdbcType.DOUBLE),
			@Result(column = "food_num", property = "foodNum", jdbcType = JdbcType.DOUBLE),
			@Result(column = "food_require", property = "foodRequire", jdbcType = JdbcType.VARCHAR),
			@Result(column = "location", property = "location", jdbcType = JdbcType.INTEGER),
			@Result(column = "location_desc", property = "locationDesc", jdbcType = JdbcType.VARCHAR),
			@Result(column = "check_status", property = "checkStatus", jdbcType = JdbcType.INTEGER),
			@Result(column = "check_user_id", property = "checkUserId", jdbcType = JdbcType.INTEGER),
			@Result(column = "check_user_name", property = "checkUserName", jdbcType = JdbcType.VARCHAR),
			@Result(column = "check_user_time", property = "checkUserTime", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "food_source", property = "foodSource", jdbcType = JdbcType.VARCHAR),
			@Result(column = "has_invoice", property = "hasInvoice", jdbcType = JdbcType.INTEGER),
			@Result(column = "price_type", property = "priceType", jdbcType = JdbcType.INTEGER),
			@Result(column = "pay_method", property = "payMethod", jdbcType = JdbcType.INTEGER),
			@Result(column = "abandon_reason_code", property = "abandonReasonCode", jdbcType = JdbcType.INTEGER),
			@Result(column = "abandon_reason", property = "abandonReason", jdbcType = JdbcType.VARCHAR),
			@Result(column = "remark", property = "remark", jdbcType = JdbcType.VARCHAR),
			@Result(column = "operate_user_id", property = "operateUserId", jdbcType = JdbcType.INTEGER),
			@Result(column = "opearate_user_name", property = "opearateUserName", jdbcType = JdbcType.VARCHAR),
			@Result(column = "view_count", property = "viewCount", jdbcType = JdbcType.INTEGER),
			@Result(column = "create_time", property = "createTime", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "modify_time", property = "modifyTime", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "auth_status", property = "authStatus", jdbcType = JdbcType.INTEGER),
			@Result(column = "has_logistics", property = "hasLogistics", jdbcType = JdbcType.INTEGER),
			@Result(column = "grain_level", property = "grainLevel", jdbcType = JdbcType.INTEGER),
			@Result(column = "category", property = "category", jdbcType = JdbcType.INTEGER),
			@Result(column = "create_userid", property = "createUserid", jdbcType = JdbcType.INTEGER),
			@Result(column = "create_username", property = "createUsername", jdbcType = JdbcType.VARCHAR),
			@Result(column = "column1", property = "column1", jdbcType = JdbcType.VARCHAR),
			@Result(column = "column2", property = "column2", jdbcType = JdbcType.VARCHAR) })
	BsGoodsInfo selectByPrimaryKey(BsGoodsInfoKey key);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table bs_goods_info
	 *
	 * @mbggenerated Fri Feb 24 18:06:23 CST 2017
	 */
	@UpdateProvider(type = BsGoodsInfoSqlProvider.class, method = "updateByExampleSelective")
	int updateByExampleSelective(@Param("record") BsGoodsInfo record, @Param("example") BsGoodsInfoExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table bs_goods_info
	 *
	 * @mbggenerated Fri Feb 24 18:06:23 CST 2017
	 */
	@UpdateProvider(type = BsGoodsInfoSqlProvider.class, method = "updateByExample")
	int updateByExample(@Param("record") BsGoodsInfo record, @Param("example") BsGoodsInfoExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table bs_goods_info
	 *
	 * @mbggenerated Fri Feb 24 18:06:23 CST 2017
	 */
	@UpdateProvider(type = BsGoodsInfoSqlProvider.class, method = "updateByPrimaryKeySelective")
	int updateByPrimaryKeySelective(BsGoodsInfo record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table bs_goods_info
	 *
	 * @mbggenerated Fri Feb 24 18:06:23 CST 2017
	 */
	@Update({ "update bs_goods_info", "set process_status = #{processStatus,jdbcType=INTEGER},",
			"check_service_status = #{checkServiceStatus,jdbcType=INTEGER},",
			"service_type = #{serviceType,jdbcType=INTEGER},", "user_id = #{userId,jdbcType=INTEGER},",
			"user_name = #{userName,jdbcType=VARCHAR},", "address = #{address,jdbcType=VARCHAR},",
			"user_phone = #{userPhone,jdbcType=VARCHAR},", "food_type = #{foodType,jdbcType=INTEGER},",
			"food_price = #{foodPrice,jdbcType=DOUBLE},", "food_num = #{foodNum,jdbcType=DOUBLE},",
			"food_require = #{foodRequire,jdbcType=VARCHAR},", "location = #{location,jdbcType=INTEGER},",
			"location_desc = #{locationDesc,jdbcType=VARCHAR},", "check_status = #{checkStatus,jdbcType=INTEGER},",
			"check_user_id = #{checkUserId,jdbcType=INTEGER},", "check_user_name = #{checkUserName,jdbcType=VARCHAR},",
			"check_user_time = #{checkUserTime,jdbcType=TIMESTAMP},", "food_source = #{foodSource,jdbcType=VARCHAR},",
			"has_invoice = #{hasInvoice,jdbcType=INTEGER},", "price_type = #{priceType,jdbcType=INTEGER},",
			"pay_method = #{payMethod,jdbcType=INTEGER},",
			"abandon_reason_code = #{abandonReasonCode,jdbcType=INTEGER},",
			"abandon_reason = #{abandonReason,jdbcType=VARCHAR},", "remark = #{remark,jdbcType=VARCHAR},",
			"operate_user_id = #{operateUserId,jdbcType=INTEGER},",
			"opearate_user_name = #{opearateUserName,jdbcType=VARCHAR},",
			"view_count = #{viewCount,jdbcType=INTEGER},", "create_time = #{createTime,jdbcType=TIMESTAMP},",
			"modify_time = #{modifyTime,jdbcType=TIMESTAMP},", "auth_status = #{authStatus,jdbcType=INTEGER},",
			"has_logistics = #{hasLogistics,jdbcType=INTEGER},", "grain_level = #{grainLevel,jdbcType=INTEGER},",
			"category = #{category,jdbcType=INTEGER},", "create_userid = #{createUserid,jdbcType=INTEGER},",
			"create_username = #{createUsername,jdbcType=VARCHAR},", "column1 = #{column1,jdbcType=VARCHAR},",
			"column2 = #{column2,jdbcType=VARCHAR}", "where id = #{id,jdbcType=BIGINT}" })
	int updateByPrimaryKey(BsGoodsInfo record);
}