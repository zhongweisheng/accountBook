package lb.rest.user.db.mapper;

import static org.apache.ibatis.jdbc.SqlBuilder.BEGIN;
import static org.apache.ibatis.jdbc.SqlBuilder.DELETE_FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.INSERT_INTO;
import static org.apache.ibatis.jdbc.SqlBuilder.ORDER_BY;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT_DISTINCT;
import static org.apache.ibatis.jdbc.SqlBuilder.SET;
import static org.apache.ibatis.jdbc.SqlBuilder.SQL;
import static org.apache.ibatis.jdbc.SqlBuilder.UPDATE;
import static org.apache.ibatis.jdbc.SqlBuilder.VALUES;
import static org.apache.ibatis.jdbc.SqlBuilder.WHERE;

import java.util.List;
import java.util.Map;
import lb.rest.user.db.entity.BsInventoryUser;
import lb.rest.user.db.entity.BsInventoryUserExample.Criteria;
import lb.rest.user.db.entity.BsInventoryUserExample.Criterion;
import lb.rest.user.db.entity.BsInventoryUserExample;

public class BsInventoryUserSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bs_inventory_user
     *
     * @mbggenerated Mon May 15 11:47:33 CST 2017
     */
    public String countByExample(BsInventoryUserExample example) {
        BEGIN();
        SELECT("count(*)");
        FROM("bs_inventory_user");
        applyWhere(example, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bs_inventory_user
     *
     * @mbggenerated Mon May 15 11:47:33 CST 2017
     */
    public String deleteByExample(BsInventoryUserExample example) {
        BEGIN();
        DELETE_FROM("bs_inventory_user");
        applyWhere(example, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bs_inventory_user
     *
     * @mbggenerated Mon May 15 11:47:33 CST 2017
     */
    public String insertSelective(BsInventoryUser record) {
        BEGIN();
        INSERT_INTO("bs_inventory_user");
        
        if (record.getUserId() != null) {
            VALUES("user_id", "#{userId,jdbcType=INTEGER}");
        }
        
        if (record.getTrueName() != null) {
            VALUES("true_name", "#{trueName,jdbcType=VARCHAR}");
        }
        
        if (record.getPhone() != null) {
            VALUES("phone", "#{phone,jdbcType=VARCHAR}");
        }
        
        if (record.getLoginName() != null) {
            VALUES("login_name", "#{loginName,jdbcType=VARCHAR}");
        }
        
        if (record.getPassWord() != null) {
            VALUES("pass_word", "#{passWord,jdbcType=VARCHAR}");
        }
        
        if (record.getLocation() != null) {
            VALUES("location", "#{location,jdbcType=INTEGER}");
        }
        
        if (record.getLocationDesc() != null) {
            VALUES("location_desc", "#{locationDesc,jdbcType=VARCHAR}");
        }
        
        if (record.getAddress() != null) {
            VALUES("address", "#{address,jdbcType=VARCHAR}");
        }
        
        if (record.getOpenid() != null) {
            VALUES("openid", "#{openid,jdbcType=VARCHAR}");
        }
        
        if (record.getNickName() != null) {
            VALUES("nick_name", "#{nickName,jdbcType=VARCHAR}");
        }
        
        if (record.getUserImage() != null) {
            VALUES("user_image", "#{userImage,jdbcType=VARCHAR}");
        }
        
        if (record.getRegTime() != null) {
            VALUES("reg_time", "#{regTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdateTime() != null) {
            VALUES("update_time", "#{updateTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getRemark() != null) {
            VALUES("remark", "#{remark,jdbcType=VARCHAR}");
        }
        
        if (record.getPrintHead() != null) {
            VALUES("print_head", "#{printHead,jdbcType=VARCHAR}");
        }
        
        if (record.getBsNumberId() != null) {
            VALUES("bs_number_id", "#{bsNumberId,jdbcType=INTEGER}");
        }
        
        if (record.getUserType() != null) {
            VALUES("user_type", "#{userType,jdbcType=INTEGER}");
        }
        
        if (record.getCompanyId() != null) {
            VALUES("company_id", "#{companyId,jdbcType=INTEGER}");
        }
        
        if (record.getOwnerId() != null) {
            VALUES("owner_id", "#{ownerId,jdbcType=INTEGER}");
        }
        
        if (record.getIsActived() != null) {
            VALUES("is_actived", "#{isActived,jdbcType=INTEGER}");
        }
        
        if (record.getIsDeleted() != null) {
            VALUES("is_deleted", "#{isDeleted,jdbcType=INTEGER}");
        }
        
        if (record.getDepotCount() != null) {
            VALUES("depot_count", "#{depotCount,jdbcType=INTEGER}");
        }
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bs_inventory_user
     *
     * @mbggenerated Mon May 15 11:47:33 CST 2017
     */
    public String selectByExample(BsInventoryUserExample example) {
        BEGIN();
        if (example != null && example.isDistinct()) {
            SELECT_DISTINCT("user_id");
        } else {
            SELECT("user_id");
        }
        SELECT("true_name");
        SELECT("phone");
        SELECT("login_name");
        SELECT("pass_word");
        SELECT("location");
        SELECT("location_desc");
        SELECT("address");
        SELECT("openid");
        SELECT("nick_name");
        SELECT("user_image");
        SELECT("reg_time");
        SELECT("update_time");
        SELECT("remark");
        SELECT("print_head");
        SELECT("bs_number_id");
        SELECT("user_type");
        SELECT("company_id");
        SELECT("owner_id");
        SELECT("is_actived");
        SELECT("is_deleted");
        SELECT("depot_count");
        FROM("bs_inventory_user");
        applyWhere(example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            ORDER_BY(example.getOrderByClause());
        }
        if (example !=null && example.getLimit() > 0 ) { 
        
        	return SQL() + " limit #{offset,jdbcType=INTEGER} , #{limit,jdbcType=INTEGER}";
        	} 
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bs_inventory_user
     *
     * @mbggenerated Mon May 15 11:47:33 CST 2017
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        BsInventoryUser record = (BsInventoryUser) parameter.get("record");
        BsInventoryUserExample example = (BsInventoryUserExample) parameter.get("example");
        
        BEGIN();
        UPDATE("bs_inventory_user");
        
        if (record.getUserId() != null) {
            SET("user_id = #{record.userId,jdbcType=INTEGER}");
        }
        
        if (record.getTrueName() != null) {
            SET("true_name = #{record.trueName,jdbcType=VARCHAR}");
        }
        
        if (record.getPhone() != null) {
            SET("phone = #{record.phone,jdbcType=VARCHAR}");
        }
        
        if (record.getLoginName() != null) {
            SET("login_name = #{record.loginName,jdbcType=VARCHAR}");
        }
        
        if (record.getPassWord() != null) {
            SET("pass_word = #{record.passWord,jdbcType=VARCHAR}");
        }
        
        if (record.getLocation() != null) {
            SET("location = #{record.location,jdbcType=INTEGER}");
        }
        
        if (record.getLocationDesc() != null) {
            SET("location_desc = #{record.locationDesc,jdbcType=VARCHAR}");
        }
        
        if (record.getAddress() != null) {
            SET("address = #{record.address,jdbcType=VARCHAR}");
        }
        
        if (record.getOpenid() != null) {
            SET("openid = #{record.openid,jdbcType=VARCHAR}");
        }
        
        if (record.getNickName() != null) {
            SET("nick_name = #{record.nickName,jdbcType=VARCHAR}");
        }
        
        if (record.getUserImage() != null) {
            SET("user_image = #{record.userImage,jdbcType=VARCHAR}");
        }
        
        if (record.getRegTime() != null) {
            SET("reg_time = #{record.regTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdateTime() != null) {
            SET("update_time = #{record.updateTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getRemark() != null) {
            SET("remark = #{record.remark,jdbcType=VARCHAR}");
        }
        
        if (record.getPrintHead() != null) {
            SET("print_head = #{record.printHead,jdbcType=VARCHAR}");
        }
        
        if (record.getBsNumberId() != null) {
            SET("bs_number_id = #{record.bsNumberId,jdbcType=INTEGER}");
        }
        
        if (record.getUserType() != null) {
            SET("user_type = #{record.userType,jdbcType=INTEGER}");
        }
        
        if (record.getCompanyId() != null) {
            SET("company_id = #{record.companyId,jdbcType=INTEGER}");
        }
        
        if (record.getOwnerId() != null) {
            SET("owner_id = #{record.ownerId,jdbcType=INTEGER}");
        }
        
        if (record.getIsActived() != null) {
            SET("is_actived = #{record.isActived,jdbcType=INTEGER}");
        }
        
        if (record.getIsDeleted() != null) {
            SET("is_deleted = #{record.isDeleted,jdbcType=INTEGER}");
        }
        
        if (record.getDepotCount() != null) {
            SET("depot_count = #{record.depotCount,jdbcType=INTEGER}");
        }
        
        applyWhere(example, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bs_inventory_user
     *
     * @mbggenerated Mon May 15 11:47:33 CST 2017
     */
    public String updateByExample(Map<String, Object> parameter) {
        BEGIN();
        UPDATE("bs_inventory_user");
        
        SET("user_id = #{record.userId,jdbcType=INTEGER}");
        SET("true_name = #{record.trueName,jdbcType=VARCHAR}");
        SET("phone = #{record.phone,jdbcType=VARCHAR}");
        SET("login_name = #{record.loginName,jdbcType=VARCHAR}");
        SET("pass_word = #{record.passWord,jdbcType=VARCHAR}");
        SET("location = #{record.location,jdbcType=INTEGER}");
        SET("location_desc = #{record.locationDesc,jdbcType=VARCHAR}");
        SET("address = #{record.address,jdbcType=VARCHAR}");
        SET("openid = #{record.openid,jdbcType=VARCHAR}");
        SET("nick_name = #{record.nickName,jdbcType=VARCHAR}");
        SET("user_image = #{record.userImage,jdbcType=VARCHAR}");
        SET("reg_time = #{record.regTime,jdbcType=TIMESTAMP}");
        SET("update_time = #{record.updateTime,jdbcType=TIMESTAMP}");
        SET("remark = #{record.remark,jdbcType=VARCHAR}");
        SET("print_head = #{record.printHead,jdbcType=VARCHAR}");
        SET("bs_number_id = #{record.bsNumberId,jdbcType=INTEGER}");
        SET("user_type = #{record.userType,jdbcType=INTEGER}");
        SET("company_id = #{record.companyId,jdbcType=INTEGER}");
        SET("owner_id = #{record.ownerId,jdbcType=INTEGER}");
        SET("is_actived = #{record.isActived,jdbcType=INTEGER}");
        SET("is_deleted = #{record.isDeleted,jdbcType=INTEGER}");
        SET("depot_count = #{record.depotCount,jdbcType=INTEGER}");
        
        BsInventoryUserExample example = (BsInventoryUserExample) parameter.get("example");
        applyWhere(example, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bs_inventory_user
     *
     * @mbggenerated Mon May 15 11:47:33 CST 2017
     */
    public String updateByPrimaryKeySelective(BsInventoryUser record) {
        BEGIN();
        UPDATE("bs_inventory_user");
        
        if (record.getTrueName() != null) {
            SET("true_name = #{trueName,jdbcType=VARCHAR}");
        }
        
        if (record.getPhone() != null) {
            SET("phone = #{phone,jdbcType=VARCHAR}");
        }
        
        if (record.getLoginName() != null) {
            SET("login_name = #{loginName,jdbcType=VARCHAR}");
        }
        
        if (record.getPassWord() != null) {
            SET("pass_word = #{passWord,jdbcType=VARCHAR}");
        }
        
        if (record.getLocation() != null) {
            SET("location = #{location,jdbcType=INTEGER}");
        }
        
        if (record.getLocationDesc() != null) {
            SET("location_desc = #{locationDesc,jdbcType=VARCHAR}");
        }
        
        if (record.getAddress() != null) {
            SET("address = #{address,jdbcType=VARCHAR}");
        }
        
        if (record.getOpenid() != null) {
            SET("openid = #{openid,jdbcType=VARCHAR}");
        }
        
        if (record.getNickName() != null) {
            SET("nick_name = #{nickName,jdbcType=VARCHAR}");
        }
        
        if (record.getUserImage() != null) {
            SET("user_image = #{userImage,jdbcType=VARCHAR}");
        }
        
        if (record.getRegTime() != null) {
            SET("reg_time = #{regTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdateTime() != null) {
            SET("update_time = #{updateTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getRemark() != null) {
            SET("remark = #{remark,jdbcType=VARCHAR}");
        }
        
        if (record.getPrintHead() != null) {
            SET("print_head = #{printHead,jdbcType=VARCHAR}");
        }
        
        if (record.getBsNumberId() != null) {
            SET("bs_number_id = #{bsNumberId,jdbcType=INTEGER}");
        }
        
        if (record.getUserType() != null) {
            SET("user_type = #{userType,jdbcType=INTEGER}");
        }
        
        if (record.getCompanyId() != null) {
            SET("company_id = #{companyId,jdbcType=INTEGER}");
        }
        
        if (record.getOwnerId() != null) {
            SET("owner_id = #{ownerId,jdbcType=INTEGER}");
        }
        
        if (record.getIsActived() != null) {
            SET("is_actived = #{isActived,jdbcType=INTEGER}");
        }
        
        if (record.getIsDeleted() != null) {
            SET("is_deleted = #{isDeleted,jdbcType=INTEGER}");
        }
        
        if (record.getDepotCount() != null) {
            SET("depot_count = #{depotCount,jdbcType=INTEGER}");
        }
        
        WHERE("user_id = #{userId,jdbcType=INTEGER}");
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bs_inventory_user
     *
     * @mbggenerated Mon May 15 11:47:33 CST 2017
     */
    protected void applyWhere(BsInventoryUserExample example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            WHERE(sb.toString());
        }
    }
}