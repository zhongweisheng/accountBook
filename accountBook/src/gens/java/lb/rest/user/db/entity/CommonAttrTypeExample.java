package lb.rest.user.db.entity;

import java.util.ArrayList;
import java.util.List;

public class CommonAttrTypeExample {
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to
	 * the database table common_attr_type
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	protected String orderByClause;

	/**
	 * This field was generated by MyBatis Generator. This field corresponds to
	 * the database table common_attr_type
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	protected boolean distinct;

	/**
	 * This field was generated by MyBatis Generator. This field corresponds to
	 * the database table common_attr_type
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	protected List<Criteria> oredCriteria;

	protected int offset;

	protected int limit;

	protected String sumCol;

	protected String groupSelClause;

	protected String groupByClause;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr_type
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	public CommonAttrTypeExample() {
		oredCriteria = new ArrayList<Criteria>();
		offset = 0;
		limit = Integer.MAX_VALUE;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr_type
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr_type
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr_type
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr_type
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr_type
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr_type
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr_type
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr_type
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr_type
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr_type
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
		this.offset = 0;
		this.limit = Integer.MAX_VALUE;
		this.sumCol = null;
		this.groupSelClause = null;
		this.groupByClause = null;
	}

	public void setOffset(int offset) {
		this.offset = offset;
	}

	public int getOffset() {
		return offset;
	}

	public void setLimit(int limit) {
		this.limit = limit;
	}

	public int getLimit() {
		return limit;
	}

	public void setSumCol(String sumCol) {
		this.sumCol = sumCol;
	}

	public String getSumCol() {
		return sumCol;
	}

	public void setGroupSelClause(String groupSelClause) {
		this.groupSelClause = groupSelClause;
	}

	public String getGroupSelClause() {
		return groupSelClause;
	}

	public void setGroupByClause(String groupByClause) {
		this.groupByClause = groupByClause;
	}

	public String getGroupByClause() {
		return groupByClause;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to
	 * the database table common_attr_type
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andTypeidIsNull() {
			addCriterion("typeId is null");
			return (Criteria) this;
		}

		public Criteria andTypeidIsNotNull() {
			addCriterion("typeId is not null");
			return (Criteria) this;
		}

		public Criteria andTypeidEqualTo(Integer value) {
			addCriterion("typeId =", value, "typeid");
			return (Criteria) this;
		}

		public Criteria andTypeidNotEqualTo(Integer value) {
			addCriterion("typeId <>", value, "typeid");
			return (Criteria) this;
		}

		public Criteria andTypeidGreaterThan(Integer value) {
			addCriterion("typeId >", value, "typeid");
			return (Criteria) this;
		}

		public Criteria andTypeidGreaterThanOrEqualTo(Integer value) {
			addCriterion("typeId >=", value, "typeid");
			return (Criteria) this;
		}

		public Criteria andTypeidLessThan(Integer value) {
			addCriterion("typeId <", value, "typeid");
			return (Criteria) this;
		}

		public Criteria andTypeidLessThanOrEqualTo(Integer value) {
			addCriterion("typeId <=", value, "typeid");
			return (Criteria) this;
		}

		public Criteria andTypeidIn(List<Integer> values) {
			addCriterion("typeId in", values, "typeid");
			return (Criteria) this;
		}

		public Criteria andTypeidNotIn(List<Integer> values) {
			addCriterion("typeId not in", values, "typeid");
			return (Criteria) this;
		}

		public Criteria andTypeidBetween(Integer value1, Integer value2) {
			addCriterion("typeId between", value1, value2, "typeid");
			return (Criteria) this;
		}

		public Criteria andTypeidNotBetween(Integer value1, Integer value2) {
			addCriterion("typeId not between", value1, value2, "typeid");
			return (Criteria) this;
		}

		public Criteria andTypenameIsNull() {
			addCriterion("typeName is null");
			return (Criteria) this;
		}

		public Criteria andTypenameIsNotNull() {
			addCriterion("typeName is not null");
			return (Criteria) this;
		}

		public Criteria andTypenameEqualTo(String value) {
			addCriterion("typeName =", value, "typename");
			return (Criteria) this;
		}

		public Criteria andTypenameNotEqualTo(String value) {
			addCriterion("typeName <>", value, "typename");
			return (Criteria) this;
		}

		public Criteria andTypenameGreaterThan(String value) {
			addCriterion("typeName >", value, "typename");
			return (Criteria) this;
		}

		public Criteria andTypenameGreaterThanOrEqualTo(String value) {
			addCriterion("typeName >=", value, "typename");
			return (Criteria) this;
		}

		public Criteria andTypenameLessThan(String value) {
			addCriterion("typeName <", value, "typename");
			return (Criteria) this;
		}

		public Criteria andTypenameLessThanOrEqualTo(String value) {
			addCriterion("typeName <=", value, "typename");
			return (Criteria) this;
		}

		public Criteria andTypenameLike(String value) {
			addCriterion("typeName like", value, "typename");
			return (Criteria) this;
		}

		public Criteria andTypenameNotLike(String value) {
			addCriterion("typeName not like", value, "typename");
			return (Criteria) this;
		}

		public Criteria andTypenameIn(List<String> values) {
			addCriterion("typeName in", values, "typename");
			return (Criteria) this;
		}

		public Criteria andTypenameNotIn(List<String> values) {
			addCriterion("typeName not in", values, "typename");
			return (Criteria) this;
		}

		public Criteria andTypenameBetween(String value1, String value2) {
			addCriterion("typeName between", value1, value2, "typename");
			return (Criteria) this;
		}

		public Criteria andTypenameNotBetween(String value1, String value2) {
			addCriterion("typeName not between", value1, value2, "typename");
			return (Criteria) this;
		}

		public Criteria andIsavailableIsNull() {
			addCriterion("isAvailable is null");
			return (Criteria) this;
		}

		public Criteria andIsavailableIsNotNull() {
			addCriterion("isAvailable is not null");
			return (Criteria) this;
		}

		public Criteria andIsavailableEqualTo(Integer value) {
			addCriterion("isAvailable =", value, "isavailable");
			return (Criteria) this;
		}

		public Criteria andIsavailableNotEqualTo(Integer value) {
			addCriterion("isAvailable <>", value, "isavailable");
			return (Criteria) this;
		}

		public Criteria andIsavailableGreaterThan(Integer value) {
			addCriterion("isAvailable >", value, "isavailable");
			return (Criteria) this;
		}

		public Criteria andIsavailableGreaterThanOrEqualTo(Integer value) {
			addCriterion("isAvailable >=", value, "isavailable");
			return (Criteria) this;
		}

		public Criteria andIsavailableLessThan(Integer value) {
			addCriterion("isAvailable <", value, "isavailable");
			return (Criteria) this;
		}

		public Criteria andIsavailableLessThanOrEqualTo(Integer value) {
			addCriterion("isAvailable <=", value, "isavailable");
			return (Criteria) this;
		}

		public Criteria andIsavailableIn(List<Integer> values) {
			addCriterion("isAvailable in", values, "isavailable");
			return (Criteria) this;
		}

		public Criteria andIsavailableNotIn(List<Integer> values) {
			addCriterion("isAvailable not in", values, "isavailable");
			return (Criteria) this;
		}

		public Criteria andIsavailableBetween(Integer value1, Integer value2) {
			addCriterion("isAvailable between", value1, value2, "isavailable");
			return (Criteria) this;
		}

		public Criteria andIsavailableNotBetween(Integer value1, Integer value2) {
			addCriterion("isAvailable not between", value1, value2, "isavailable");
			return (Criteria) this;
		}

		public Criteria andCreatetimeIsNull() {
			addCriterion("createTime is null");
			return (Criteria) this;
		}

		public Criteria andCreatetimeIsNotNull() {
			addCriterion("createTime is not null");
			return (Criteria) this;
		}

		public Criteria andCreatetimeEqualTo(String value) {
			addCriterion("createTime =", value, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeNotEqualTo(String value) {
			addCriterion("createTime <>", value, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeGreaterThan(String value) {
			addCriterion("createTime >", value, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeGreaterThanOrEqualTo(String value) {
			addCriterion("createTime >=", value, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeLessThan(String value) {
			addCriterion("createTime <", value, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeLessThanOrEqualTo(String value) {
			addCriterion("createTime <=", value, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeLike(String value) {
			addCriterion("createTime like", value, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeNotLike(String value) {
			addCriterion("createTime not like", value, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeIn(List<String> values) {
			addCriterion("createTime in", values, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeNotIn(List<String> values) {
			addCriterion("createTime not in", values, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeBetween(String value1, String value2) {
			addCriterion("createTime between", value1, value2, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeNotBetween(String value1, String value2) {
			addCriterion("createTime not between", value1, value2, "createtime");
			return (Criteria) this;
		}

		public Criteria andIstagIsNull() {
			addCriterion("isTag is null");
			return (Criteria) this;
		}

		public Criteria andIstagIsNotNull() {
			addCriterion("isTag is not null");
			return (Criteria) this;
		}

		public Criteria andIstagEqualTo(Integer value) {
			addCriterion("isTag =", value, "istag");
			return (Criteria) this;
		}

		public Criteria andIstagNotEqualTo(Integer value) {
			addCriterion("isTag <>", value, "istag");
			return (Criteria) this;
		}

		public Criteria andIstagGreaterThan(Integer value) {
			addCriterion("isTag >", value, "istag");
			return (Criteria) this;
		}

		public Criteria andIstagGreaterThanOrEqualTo(Integer value) {
			addCriterion("isTag >=", value, "istag");
			return (Criteria) this;
		}

		public Criteria andIstagLessThan(Integer value) {
			addCriterion("isTag <", value, "istag");
			return (Criteria) this;
		}

		public Criteria andIstagLessThanOrEqualTo(Integer value) {
			addCriterion("isTag <=", value, "istag");
			return (Criteria) this;
		}

		public Criteria andIstagIn(List<Integer> values) {
			addCriterion("isTag in", values, "istag");
			return (Criteria) this;
		}

		public Criteria andIstagNotIn(List<Integer> values) {
			addCriterion("isTag not in", values, "istag");
			return (Criteria) this;
		}

		public Criteria andIstagBetween(Integer value1, Integer value2) {
			addCriterion("isTag between", value1, value2, "istag");
			return (Criteria) this;
		}

		public Criteria andIstagNotBetween(Integer value1, Integer value2) {
			addCriterion("isTag not between", value1, value2, "istag");
			return (Criteria) this;
		}

		public Criteria andTagcategoryIsNull() {
			addCriterion("tagCategory is null");
			return (Criteria) this;
		}

		public Criteria andTagcategoryIsNotNull() {
			addCriterion("tagCategory is not null");
			return (Criteria) this;
		}

		public Criteria andTagcategoryEqualTo(Integer value) {
			addCriterion("tagCategory =", value, "tagcategory");
			return (Criteria) this;
		}

		public Criteria andTagcategoryNotEqualTo(Integer value) {
			addCriterion("tagCategory <>", value, "tagcategory");
			return (Criteria) this;
		}

		public Criteria andTagcategoryGreaterThan(Integer value) {
			addCriterion("tagCategory >", value, "tagcategory");
			return (Criteria) this;
		}

		public Criteria andTagcategoryGreaterThanOrEqualTo(Integer value) {
			addCriterion("tagCategory >=", value, "tagcategory");
			return (Criteria) this;
		}

		public Criteria andTagcategoryLessThan(Integer value) {
			addCriterion("tagCategory <", value, "tagcategory");
			return (Criteria) this;
		}

		public Criteria andTagcategoryLessThanOrEqualTo(Integer value) {
			addCriterion("tagCategory <=", value, "tagcategory");
			return (Criteria) this;
		}

		public Criteria andTagcategoryIn(List<Integer> values) {
			addCriterion("tagCategory in", values, "tagcategory");
			return (Criteria) this;
		}

		public Criteria andTagcategoryNotIn(List<Integer> values) {
			addCriterion("tagCategory not in", values, "tagcategory");
			return (Criteria) this;
		}

		public Criteria andTagcategoryBetween(Integer value1, Integer value2) {
			addCriterion("tagCategory between", value1, value2, "tagcategory");
			return (Criteria) this;
		}

		public Criteria andTagcategoryNotBetween(Integer value1, Integer value2) {
			addCriterion("tagCategory not between", value1, value2, "tagcategory");
			return (Criteria) this;
		}

		public Criteria andTypenameLikeInsensitive(String value) {
			addCriterion("upper(typeName) like", value.toUpperCase(), "typename");
			return (Criteria) this;
		}

		public Criteria andCreatetimeLikeInsensitive(String value) {
			addCriterion("upper(createTime) like", value.toUpperCase(), "createtime");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to
	 * the database table common_attr_type
	 *
	 * @mbggenerated do_not_delete_during_merge Thu Feb 16 17:53:28 CST 2017
	 */
	public static class Criteria extends GeneratedCriteria {

		protected Criteria() {
			super();
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to
	 * the database table common_attr_type
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	public static class Criterion {
		private String condition;

		private Object value;

		private Object secondValue;

		private boolean noValue;

		private boolean singleValue;

		private boolean betweenValue;

		private boolean listValue;

		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}
}