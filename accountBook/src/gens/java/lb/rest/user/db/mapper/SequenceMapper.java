package lb.rest.user.db.mapper;

import fc.wpf.rest.db.iface.StaticTableDaoSupport;
import java.util.List;
import lb.rest.user.db.entity.Sequence;
import lb.rest.user.db.entity.SequenceExample;
import lb.rest.user.db.entity.SequenceKey;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface SequenceMapper extends StaticTableDaoSupport<Sequence, SequenceExample, SequenceKey> {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sequence
     *
     * @mbggenerated Thu Feb 16 17:53:28 CST 2017
     */
    @SelectProvider(type=SequenceSqlProvider.class, method="countByExample")
    int countByExample(SequenceExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sequence
     *
     * @mbggenerated Thu Feb 16 17:53:28 CST 2017
     */
    @DeleteProvider(type=SequenceSqlProvider.class, method="deleteByExample")
    int deleteByExample(SequenceExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sequence
     *
     * @mbggenerated Thu Feb 16 17:53:28 CST 2017
     */
    @Delete({
        "delete from sequence",
        "where key_id = #{keyId,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(SequenceKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sequence
     *
     * @mbggenerated Thu Feb 16 17:53:28 CST 2017
     */
    @Insert({
        "insert into sequence (key_id, name, ",
        "id)",
        "values (#{keyId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, ",
        "#{id,jdbcType=INTEGER})"
    })
    int insert(Sequence record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sequence
     *
     * @mbggenerated Thu Feb 16 17:53:28 CST 2017
     */
    @InsertProvider(type=SequenceSqlProvider.class, method="insertSelective")
    int insertSelective(Sequence record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sequence
     *
     * @mbggenerated Thu Feb 16 17:53:28 CST 2017
     */
    @SelectProvider(type=SequenceSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="key_id", property="keyId", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER)
    })
    List<Sequence> selectByExample(SequenceExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sequence
     *
     * @mbggenerated Thu Feb 16 17:53:28 CST 2017
     */
    @Select({
        "select",
        "key_id, name, id",
        "from sequence",
        "where key_id = #{keyId,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="key_id", property="keyId", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER)
    })
    Sequence selectByPrimaryKey(SequenceKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sequence
     *
     * @mbggenerated Thu Feb 16 17:53:28 CST 2017
     */
    @UpdateProvider(type=SequenceSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") Sequence record, @Param("example") SequenceExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sequence
     *
     * @mbggenerated Thu Feb 16 17:53:28 CST 2017
     */
    @UpdateProvider(type=SequenceSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") Sequence record, @Param("example") SequenceExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sequence
     *
     * @mbggenerated Thu Feb 16 17:53:28 CST 2017
     */
    @UpdateProvider(type=SequenceSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Sequence record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sequence
     *
     * @mbggenerated Thu Feb 16 17:53:28 CST 2017
     */
    @Update({
        "update sequence",
        "set name = #{name,jdbcType=VARCHAR},",
          "id = #{id,jdbcType=INTEGER}",
        "where key_id = #{keyId,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Sequence record);
}