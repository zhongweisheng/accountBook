package lb.rest.user.db.mapper;

import static org.apache.ibatis.jdbc.SqlBuilder.BEGIN;
import static org.apache.ibatis.jdbc.SqlBuilder.DELETE_FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.INSERT_INTO;
import static org.apache.ibatis.jdbc.SqlBuilder.ORDER_BY;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT_DISTINCT;
import static org.apache.ibatis.jdbc.SqlBuilder.SET;
import static org.apache.ibatis.jdbc.SqlBuilder.SQL;
import static org.apache.ibatis.jdbc.SqlBuilder.UPDATE;
import static org.apache.ibatis.jdbc.SqlBuilder.VALUES;
import static org.apache.ibatis.jdbc.SqlBuilder.WHERE;

import java.util.List;
import java.util.Map;
import lb.rest.user.db.entity.BsInventoryRecord;
import lb.rest.user.db.entity.BsInventoryRecordExample.Criteria;
import lb.rest.user.db.entity.BsInventoryRecordExample.Criterion;
import lb.rest.user.db.entity.BsInventoryRecordExample;

public class BsInventoryRecordSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bs_inventory_record
     *
     * @mbggenerated Mon May 15 11:47:33 CST 2017
     */
    public String countByExample(BsInventoryRecordExample example) {
        BEGIN();
        SELECT("count(*)");
        FROM("bs_inventory_record");
        applyWhere(example, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bs_inventory_record
     *
     * @mbggenerated Mon May 15 11:47:33 CST 2017
     */
    public String deleteByExample(BsInventoryRecordExample example) {
        BEGIN();
        DELETE_FROM("bs_inventory_record");
        applyWhere(example, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bs_inventory_record
     *
     * @mbggenerated Mon May 15 11:47:33 CST 2017
     */
    public String insertSelective(BsInventoryRecord record) {
        BEGIN();
        INSERT_INTO("bs_inventory_record");
        
        if (record.getId() != null) {
            VALUES("id", "#{id,jdbcType=INTEGER}");
        }
        
        if (record.getUserId() != null) {
            VALUES("user_id", "#{userId,jdbcType=INTEGER}");
        }
        
        if (record.getRecordType() != null) {
            VALUES("record_type", "#{recordType,jdbcType=INTEGER}");
        }
        
        if (record.getRecordNumber() != null) {
            VALUES("record_number", "#{recordNumber,jdbcType=VARCHAR}");
        }
        
        if (record.getRecordName() != null) {
            VALUES("record_name", "#{recordName,jdbcType=VARCHAR}");
        }
        
        if (record.getGrainType() != null) {
            VALUES("grain_type", "#{grainType,jdbcType=INTEGER}");
        }
        
        if (record.getDate() != null) {
            VALUES("date", "#{date,jdbcType=VARCHAR}");
        }
        
        if (record.getTime() != null) {
            VALUES("time", "#{time,jdbcType=VARCHAR}");
        }
        
        if (record.getRecordTime() != null) {
            VALUES("record_time", "#{recordTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getLicensePlate() != null) {
            VALUES("license_plate", "#{licensePlate,jdbcType=VARCHAR}");
        }
        
        if (record.getGrossWeightIn() != null) {
            VALUES("gross_weight_in", "#{grossWeightIn,jdbcType=DOUBLE}");
        }
        
        if (record.getTareWeightIn() != null) {
            VALUES("tare_weight_in", "#{tareWeightIn,jdbcType=DOUBLE}");
        }
        
        if (record.getNetWeightIn() != null) {
            VALUES("net_weight_in", "#{netWeightIn,jdbcType=DOUBLE}");
        }
        
        if (record.getGrossWeightOut() != null) {
            VALUES("gross_weight_out", "#{grossWeightOut,jdbcType=DOUBLE}");
        }
        
        if (record.getTareWeightOut() != null) {
            VALUES("tare_weight_out", "#{tareWeightOut,jdbcType=DOUBLE}");
        }
        
        if (record.getNetWeightOut() != null) {
            VALUES("net_weight_out", "#{netWeightOut,jdbcType=DOUBLE}");
        }
        
        if (record.getMoneyIn() != null) {
            VALUES("money_in", "#{moneyIn,jdbcType=DOUBLE}");
        }
        
        if (record.getMoneyInTotal() != null) {
            VALUES("money_in_total", "#{moneyInTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getMoneyOut() != null) {
            VALUES("money_out", "#{moneyOut,jdbcType=DOUBLE}");
        }
        
        if (record.getMoneyOutTotal() != null) {
            VALUES("money_out_total", "#{moneyOutTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getUnitPrice() != null) {
            VALUES("unit_price", "#{unitPrice,jdbcType=DOUBLE}");
        }
        
        if (record.getBalance() != null) {
            VALUES("balance", "#{balance,jdbcType=DOUBLE}");
        }
        
        if (record.getInTotal() != null) {
            VALUES("in_total", "#{inTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getAveragePriceIn() != null) {
            VALUES("average_price_in", "#{averagePriceIn,jdbcType=DOUBLE}");
        }
        
        if (record.getInventoryCost() != null) {
            VALUES("inventory_cost", "#{inventoryCost,jdbcType=DOUBLE}");
        }
        
        if (record.getInventoryMoney() != null) {
            VALUES("inventory_money", "#{inventoryMoney,jdbcType=DOUBLE}");
        }
        
        if (record.getTotalProfit() != null) {
            VALUES("total_profit", "#{totalProfit,jdbcType=DOUBLE}");
        }
        
        if (record.getProfit() != null) {
            VALUES("profit", "#{profit,jdbcType=DOUBLE}");
        }
        
        if (record.getCreateTime() != null) {
            VALUES("create_time", "#{createTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getMoistureContent() != null) {
            VALUES("moisture_content", "#{moistureContent,jdbcType=VARCHAR}");
        }
        
        if (record.getBulkDensity() != null) {
            VALUES("bulk_density", "#{bulkDensity,jdbcType=VARCHAR}");
        }
        
        if (record.getMildew() != null) {
            VALUES("mildew", "#{mildew,jdbcType=VARCHAR}");
        }
        
        if (record.getImperfectGrains() != null) {
            VALUES("imperfect_grains", "#{imperfectGrains,jdbcType=VARCHAR}");
        }
        
        if (record.getProductQuality() != null) {
            VALUES("product_quality", "#{productQuality,jdbcType=VARCHAR}");
        }
        
        if (record.getImpurity() != null) {
            VALUES("impurity", "#{impurity,jdbcType=VARCHAR}");
        }
        
        if (record.getStaffId() != null) {
            VALUES("staff_id", "#{staffId,jdbcType=INTEGER}");
        }
        
        if (record.getStaffName() != null) {
            VALUES("staff_name", "#{staffName,jdbcType=VARCHAR}");
        }
        
        if (record.getStaffPhone() != null) {
            VALUES("staff_phone", "#{staffPhone,jdbcType=VARCHAR}");
        }
        
        if (record.getIntColumn1() != null) {
            VALUES("int_column1", "#{intColumn1,jdbcType=INTEGER}");
        }
        
        if (record.getIntColumn2() != null) {
            VALUES("int_column2", "#{intColumn2,jdbcType=INTEGER}");
        }
        
        if (record.getStrColumn1() != null) {
            VALUES("str_column1", "#{strColumn1,jdbcType=VARCHAR}");
        }
        
        if (record.getStrColumn2() != null) {
            VALUES("str_column2", "#{strColumn2,jdbcType=VARCHAR}");
        }
        
        if (record.getRemark() != null) {
            VALUES("remark", "#{remark,jdbcType=VARCHAR}");
        }
        
        if (record.getDriverId() != null) {
            VALUES("driver_id", "#{driverId,jdbcType=INTEGER}");
        }
        
        if (record.getDriverName() != null) {
            VALUES("driver_name", "#{driverName,jdbcType=VARCHAR}");
        }
        
        if (record.getDriverPhone() != null) {
            VALUES("driver_phone", "#{driverPhone,jdbcType=VARCHAR}");
        }
        
        if (record.getDeduction() != null) {
            VALUES("deduction", "#{deduction,jdbcType=DOUBLE}");
        }
        
        if (record.getSmell() != null) {
            VALUES("smell", "#{smell,jdbcType=VARCHAR}");
        }
        
        if (record.getLocation() != null) {
            VALUES("location", "#{location,jdbcType=VARCHAR}");
        }
        
        if (record.getLocationDesc() != null) {
            VALUES("location_desc", "#{locationDesc,jdbcType=VARCHAR}");
        }
        
        if (record.getVarietyType() != null) {
            VALUES("variety_type", "#{varietyType,jdbcType=INTEGER}");
        }
        
        if (record.getPackingType() != null) {
            VALUES("packing_type", "#{packingType,jdbcType=INTEGER}");
        }
        
        if (record.getProductionNiafe() != null) {
            VALUES("production_niafe", "#{productionNiafe,jdbcType=VARCHAR}");
        }
        
        if (record.getCost() != null) {
            VALUES("cost", "#{cost,jdbcType=DOUBLE}");
        }
        
        if (record.getShifuk() != null) {
            VALUES("shifuk", "#{shifuk,jdbcType=DOUBLE}");
        }
        
        if (record.getIfPayment() != null) {
            VALUES("if_payment", "#{ifPayment,jdbcType=INTEGER}");
        }
        
        if (record.getPaidMoney() != null) {
            VALUES("paid_money", "#{paidMoney,jdbcType=DOUBLE}");
        }
        
        if (record.getUnpaidMoney() != null) {
            VALUES("unpaid_money", "#{unpaidMoney,jdbcType=DOUBLE}");
        }
        
        if (record.getIfClear() != null) {
            VALUES("if_clear", "#{ifClear,jdbcType=INTEGER}");
        }
        
        if (record.getOperateUserId() != null) {
            VALUES("operate_user_id", "#{operateUserId,jdbcType=INTEGER}");
        }
        
        if (record.getOperateUserName() != null) {
            VALUES("operate_user_name", "#{operateUserName,jdbcType=VARCHAR}");
        }
        
        if (record.getDepotId() != null) {
            VALUES("depot_id", "#{depotId,jdbcType=INTEGER}");
        }
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bs_inventory_record
     *
     * @mbggenerated Mon May 15 11:47:33 CST 2017
     */
    public String selectByExample(BsInventoryRecordExample example) {
        BEGIN();
        if (example != null && example.isDistinct()) {
            SELECT_DISTINCT("id");
        } else {
            SELECT("id");
        }
        SELECT("user_id");
        SELECT("record_type");
        SELECT("record_number");
        SELECT("record_name");
        SELECT("grain_type");
        SELECT("date");
        SELECT("time");
        SELECT("record_time");
        SELECT("license_plate");
        SELECT("gross_weight_in");
        SELECT("tare_weight_in");
        SELECT("net_weight_in");
        SELECT("gross_weight_out");
        SELECT("tare_weight_out");
        SELECT("net_weight_out");
        SELECT("money_in");
        SELECT("money_in_total");
        SELECT("money_out");
        SELECT("money_out_total");
        SELECT("unit_price");
        SELECT("balance");
        SELECT("in_total");
        SELECT("average_price_in");
        SELECT("inventory_cost");
        SELECT("inventory_money");
        SELECT("total_profit");
        SELECT("profit");
        SELECT("create_time");
        SELECT("moisture_content");
        SELECT("bulk_density");
        SELECT("mildew");
        SELECT("imperfect_grains");
        SELECT("product_quality");
        SELECT("impurity");
        SELECT("staff_id");
        SELECT("staff_name");
        SELECT("staff_phone");
        SELECT("int_column1");
        SELECT("int_column2");
        SELECT("str_column1");
        SELECT("str_column2");
        SELECT("remark");
        SELECT("driver_id");
        SELECT("driver_name");
        SELECT("driver_phone");
        SELECT("deduction");
        SELECT("smell");
        SELECT("location");
        SELECT("location_desc");
        SELECT("variety_type");
        SELECT("packing_type");
        SELECT("production_niafe");
        SELECT("cost");
        SELECT("shifuk");
        SELECT("if_payment");
        SELECT("paid_money");
        SELECT("unpaid_money");
        SELECT("if_clear");
        SELECT("operate_user_id");
        SELECT("operate_user_name");
        SELECT("depot_id");
        FROM("bs_inventory_record");
        applyWhere(example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            ORDER_BY(example.getOrderByClause());
        }
        if (example !=null && example.getLimit() > 0 ) { 
        
        	return SQL() + " limit #{offset,jdbcType=INTEGER} , #{limit,jdbcType=INTEGER}";
        	} 
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bs_inventory_record
     *
     * @mbggenerated Mon May 15 11:47:33 CST 2017
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        BsInventoryRecord record = (BsInventoryRecord) parameter.get("record");
        BsInventoryRecordExample example = (BsInventoryRecordExample) parameter.get("example");
        
        BEGIN();
        UPDATE("bs_inventory_record");
        
        if (record.getId() != null) {
            SET("id = #{record.id,jdbcType=INTEGER}");
        }
        
        if (record.getUserId() != null) {
            SET("user_id = #{record.userId,jdbcType=INTEGER}");
        }
        
        if (record.getRecordType() != null) {
            SET("record_type = #{record.recordType,jdbcType=INTEGER}");
        }
        
        if (record.getRecordNumber() != null) {
            SET("record_number = #{record.recordNumber,jdbcType=VARCHAR}");
        }
        
        if (record.getRecordName() != null) {
            SET("record_name = #{record.recordName,jdbcType=VARCHAR}");
        }
        
        if (record.getGrainType() != null) {
            SET("grain_type = #{record.grainType,jdbcType=INTEGER}");
        }
        
        if (record.getDate() != null) {
            SET("date = #{record.date,jdbcType=VARCHAR}");
        }
        
        if (record.getTime() != null) {
            SET("time = #{record.time,jdbcType=VARCHAR}");
        }
        
        if (record.getRecordTime() != null) {
            SET("record_time = #{record.recordTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getLicensePlate() != null) {
            SET("license_plate = #{record.licensePlate,jdbcType=VARCHAR}");
        }
        
        if (record.getGrossWeightIn() != null) {
            SET("gross_weight_in = #{record.grossWeightIn,jdbcType=DOUBLE}");
        }
        
        if (record.getTareWeightIn() != null) {
            SET("tare_weight_in = #{record.tareWeightIn,jdbcType=DOUBLE}");
        }
        
        if (record.getNetWeightIn() != null) {
            SET("net_weight_in = #{record.netWeightIn,jdbcType=DOUBLE}");
        }
        
        if (record.getGrossWeightOut() != null) {
            SET("gross_weight_out = #{record.grossWeightOut,jdbcType=DOUBLE}");
        }
        
        if (record.getTareWeightOut() != null) {
            SET("tare_weight_out = #{record.tareWeightOut,jdbcType=DOUBLE}");
        }
        
        if (record.getNetWeightOut() != null) {
            SET("net_weight_out = #{record.netWeightOut,jdbcType=DOUBLE}");
        }
        
        if (record.getMoneyIn() != null) {
            SET("money_in = #{record.moneyIn,jdbcType=DOUBLE}");
        }
        
        if (record.getMoneyInTotal() != null) {
            SET("money_in_total = #{record.moneyInTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getMoneyOut() != null) {
            SET("money_out = #{record.moneyOut,jdbcType=DOUBLE}");
        }
        
        if (record.getMoneyOutTotal() != null) {
            SET("money_out_total = #{record.moneyOutTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getUnitPrice() != null) {
            SET("unit_price = #{record.unitPrice,jdbcType=DOUBLE}");
        }
        
        if (record.getBalance() != null) {
            SET("balance = #{record.balance,jdbcType=DOUBLE}");
        }
        
        if (record.getInTotal() != null) {
            SET("in_total = #{record.inTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getAveragePriceIn() != null) {
            SET("average_price_in = #{record.averagePriceIn,jdbcType=DOUBLE}");
        }
        
        if (record.getInventoryCost() != null) {
            SET("inventory_cost = #{record.inventoryCost,jdbcType=DOUBLE}");
        }
        
        if (record.getInventoryMoney() != null) {
            SET("inventory_money = #{record.inventoryMoney,jdbcType=DOUBLE}");
        }
        
        if (record.getTotalProfit() != null) {
            SET("total_profit = #{record.totalProfit,jdbcType=DOUBLE}");
        }
        
        if (record.getProfit() != null) {
            SET("profit = #{record.profit,jdbcType=DOUBLE}");
        }
        
        if (record.getCreateTime() != null) {
            SET("create_time = #{record.createTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getMoistureContent() != null) {
            SET("moisture_content = #{record.moistureContent,jdbcType=VARCHAR}");
        }
        
        if (record.getBulkDensity() != null) {
            SET("bulk_density = #{record.bulkDensity,jdbcType=VARCHAR}");
        }
        
        if (record.getMildew() != null) {
            SET("mildew = #{record.mildew,jdbcType=VARCHAR}");
        }
        
        if (record.getImperfectGrains() != null) {
            SET("imperfect_grains = #{record.imperfectGrains,jdbcType=VARCHAR}");
        }
        
        if (record.getProductQuality() != null) {
            SET("product_quality = #{record.productQuality,jdbcType=VARCHAR}");
        }
        
        if (record.getImpurity() != null) {
            SET("impurity = #{record.impurity,jdbcType=VARCHAR}");
        }
        
        if (record.getStaffId() != null) {
            SET("staff_id = #{record.staffId,jdbcType=INTEGER}");
        }
        
        if (record.getStaffName() != null) {
            SET("staff_name = #{record.staffName,jdbcType=VARCHAR}");
        }
        
        if (record.getStaffPhone() != null) {
            SET("staff_phone = #{record.staffPhone,jdbcType=VARCHAR}");
        }
        
        if (record.getIntColumn1() != null) {
            SET("int_column1 = #{record.intColumn1,jdbcType=INTEGER}");
        }
        
        if (record.getIntColumn2() != null) {
            SET("int_column2 = #{record.intColumn2,jdbcType=INTEGER}");
        }
        
        if (record.getStrColumn1() != null) {
            SET("str_column1 = #{record.strColumn1,jdbcType=VARCHAR}");
        }
        
        if (record.getStrColumn2() != null) {
            SET("str_column2 = #{record.strColumn2,jdbcType=VARCHAR}");
        }
        
        if (record.getRemark() != null) {
            SET("remark = #{record.remark,jdbcType=VARCHAR}");
        }
        
        if (record.getDriverId() != null) {
            SET("driver_id = #{record.driverId,jdbcType=INTEGER}");
        }
        
        if (record.getDriverName() != null) {
            SET("driver_name = #{record.driverName,jdbcType=VARCHAR}");
        }
        
        if (record.getDriverPhone() != null) {
            SET("driver_phone = #{record.driverPhone,jdbcType=VARCHAR}");
        }
        
        if (record.getDeduction() != null) {
            SET("deduction = #{record.deduction,jdbcType=DOUBLE}");
        }
        
        if (record.getSmell() != null) {
            SET("smell = #{record.smell,jdbcType=VARCHAR}");
        }
        
        if (record.getLocation() != null) {
            SET("location = #{record.location,jdbcType=VARCHAR}");
        }
        
        if (record.getLocationDesc() != null) {
            SET("location_desc = #{record.locationDesc,jdbcType=VARCHAR}");
        }
        
        if (record.getVarietyType() != null) {
            SET("variety_type = #{record.varietyType,jdbcType=INTEGER}");
        }
        
        if (record.getPackingType() != null) {
            SET("packing_type = #{record.packingType,jdbcType=INTEGER}");
        }
        
        if (record.getProductionNiafe() != null) {
            SET("production_niafe = #{record.productionNiafe,jdbcType=VARCHAR}");
        }
        
        if (record.getCost() != null) {
            SET("cost = #{record.cost,jdbcType=DOUBLE}");
        }
        
        if (record.getShifuk() != null) {
            SET("shifuk = #{record.shifuk,jdbcType=DOUBLE}");
        }
        
        if (record.getIfPayment() != null) {
            SET("if_payment = #{record.ifPayment,jdbcType=INTEGER}");
        }
        
        if (record.getPaidMoney() != null) {
            SET("paid_money = #{record.paidMoney,jdbcType=DOUBLE}");
        }
        
        if (record.getUnpaidMoney() != null) {
            SET("unpaid_money = #{record.unpaidMoney,jdbcType=DOUBLE}");
        }
        
        if (record.getIfClear() != null) {
            SET("if_clear = #{record.ifClear,jdbcType=INTEGER}");
        }
        
        if (record.getOperateUserId() != null) {
            SET("operate_user_id = #{record.operateUserId,jdbcType=INTEGER}");
        }
        
        if (record.getOperateUserName() != null) {
            SET("operate_user_name = #{record.operateUserName,jdbcType=VARCHAR}");
        }
        
        if (record.getDepotId() != null) {
            SET("depot_id = #{record.depotId,jdbcType=INTEGER}");
        }
        
        applyWhere(example, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bs_inventory_record
     *
     * @mbggenerated Mon May 15 11:47:33 CST 2017
     */
    public String updateByExample(Map<String, Object> parameter) {
        BEGIN();
        UPDATE("bs_inventory_record");
        
        SET("id = #{record.id,jdbcType=INTEGER}");
        SET("user_id = #{record.userId,jdbcType=INTEGER}");
        SET("record_type = #{record.recordType,jdbcType=INTEGER}");
        SET("record_number = #{record.recordNumber,jdbcType=VARCHAR}");
        SET("record_name = #{record.recordName,jdbcType=VARCHAR}");
        SET("grain_type = #{record.grainType,jdbcType=INTEGER}");
        SET("date = #{record.date,jdbcType=VARCHAR}");
        SET("time = #{record.time,jdbcType=VARCHAR}");
        SET("record_time = #{record.recordTime,jdbcType=TIMESTAMP}");
        SET("license_plate = #{record.licensePlate,jdbcType=VARCHAR}");
        SET("gross_weight_in = #{record.grossWeightIn,jdbcType=DOUBLE}");
        SET("tare_weight_in = #{record.tareWeightIn,jdbcType=DOUBLE}");
        SET("net_weight_in = #{record.netWeightIn,jdbcType=DOUBLE}");
        SET("gross_weight_out = #{record.grossWeightOut,jdbcType=DOUBLE}");
        SET("tare_weight_out = #{record.tareWeightOut,jdbcType=DOUBLE}");
        SET("net_weight_out = #{record.netWeightOut,jdbcType=DOUBLE}");
        SET("money_in = #{record.moneyIn,jdbcType=DOUBLE}");
        SET("money_in_total = #{record.moneyInTotal,jdbcType=DOUBLE}");
        SET("money_out = #{record.moneyOut,jdbcType=DOUBLE}");
        SET("money_out_total = #{record.moneyOutTotal,jdbcType=DOUBLE}");
        SET("unit_price = #{record.unitPrice,jdbcType=DOUBLE}");
        SET("balance = #{record.balance,jdbcType=DOUBLE}");
        SET("in_total = #{record.inTotal,jdbcType=DOUBLE}");
        SET("average_price_in = #{record.averagePriceIn,jdbcType=DOUBLE}");
        SET("inventory_cost = #{record.inventoryCost,jdbcType=DOUBLE}");
        SET("inventory_money = #{record.inventoryMoney,jdbcType=DOUBLE}");
        SET("total_profit = #{record.totalProfit,jdbcType=DOUBLE}");
        SET("profit = #{record.profit,jdbcType=DOUBLE}");
        SET("create_time = #{record.createTime,jdbcType=TIMESTAMP}");
        SET("moisture_content = #{record.moistureContent,jdbcType=VARCHAR}");
        SET("bulk_density = #{record.bulkDensity,jdbcType=VARCHAR}");
        SET("mildew = #{record.mildew,jdbcType=VARCHAR}");
        SET("imperfect_grains = #{record.imperfectGrains,jdbcType=VARCHAR}");
        SET("product_quality = #{record.productQuality,jdbcType=VARCHAR}");
        SET("impurity = #{record.impurity,jdbcType=VARCHAR}");
        SET("staff_id = #{record.staffId,jdbcType=INTEGER}");
        SET("staff_name = #{record.staffName,jdbcType=VARCHAR}");
        SET("staff_phone = #{record.staffPhone,jdbcType=VARCHAR}");
        SET("int_column1 = #{record.intColumn1,jdbcType=INTEGER}");
        SET("int_column2 = #{record.intColumn2,jdbcType=INTEGER}");
        SET("str_column1 = #{record.strColumn1,jdbcType=VARCHAR}");
        SET("str_column2 = #{record.strColumn2,jdbcType=VARCHAR}");
        SET("remark = #{record.remark,jdbcType=VARCHAR}");
        SET("driver_id = #{record.driverId,jdbcType=INTEGER}");
        SET("driver_name = #{record.driverName,jdbcType=VARCHAR}");
        SET("driver_phone = #{record.driverPhone,jdbcType=VARCHAR}");
        SET("deduction = #{record.deduction,jdbcType=DOUBLE}");
        SET("smell = #{record.smell,jdbcType=VARCHAR}");
        SET("location = #{record.location,jdbcType=VARCHAR}");
        SET("location_desc = #{record.locationDesc,jdbcType=VARCHAR}");
        SET("variety_type = #{record.varietyType,jdbcType=INTEGER}");
        SET("packing_type = #{record.packingType,jdbcType=INTEGER}");
        SET("production_niafe = #{record.productionNiafe,jdbcType=VARCHAR}");
        SET("cost = #{record.cost,jdbcType=DOUBLE}");
        SET("shifuk = #{record.shifuk,jdbcType=DOUBLE}");
        SET("if_payment = #{record.ifPayment,jdbcType=INTEGER}");
        SET("paid_money = #{record.paidMoney,jdbcType=DOUBLE}");
        SET("unpaid_money = #{record.unpaidMoney,jdbcType=DOUBLE}");
        SET("if_clear = #{record.ifClear,jdbcType=INTEGER}");
        SET("operate_user_id = #{record.operateUserId,jdbcType=INTEGER}");
        SET("operate_user_name = #{record.operateUserName,jdbcType=VARCHAR}");
        SET("depot_id = #{record.depotId,jdbcType=INTEGER}");
        
        BsInventoryRecordExample example = (BsInventoryRecordExample) parameter.get("example");
        applyWhere(example, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bs_inventory_record
     *
     * @mbggenerated Mon May 15 11:47:33 CST 2017
     */
    public String updateByPrimaryKeySelective(BsInventoryRecord record) {
        BEGIN();
        UPDATE("bs_inventory_record");
        
        if (record.getUserId() != null) {
            SET("user_id = #{userId,jdbcType=INTEGER}");
        }
        
        if (record.getRecordType() != null) {
            SET("record_type = #{recordType,jdbcType=INTEGER}");
        }
        
        if (record.getRecordNumber() != null) {
            SET("record_number = #{recordNumber,jdbcType=VARCHAR}");
        }
        
        if (record.getRecordName() != null) {
            SET("record_name = #{recordName,jdbcType=VARCHAR}");
        }
        
        if (record.getGrainType() != null) {
            SET("grain_type = #{grainType,jdbcType=INTEGER}");
        }
        
        if (record.getDate() != null) {
            SET("date = #{date,jdbcType=VARCHAR}");
        }
        
        if (record.getTime() != null) {
            SET("time = #{time,jdbcType=VARCHAR}");
        }
        
        if (record.getRecordTime() != null) {
            SET("record_time = #{recordTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getLicensePlate() != null) {
            SET("license_plate = #{licensePlate,jdbcType=VARCHAR}");
        }
        
        if (record.getGrossWeightIn() != null) {
            SET("gross_weight_in = #{grossWeightIn,jdbcType=DOUBLE}");
        }
        
        if (record.getTareWeightIn() != null) {
            SET("tare_weight_in = #{tareWeightIn,jdbcType=DOUBLE}");
        }
        
        if (record.getNetWeightIn() != null) {
            SET("net_weight_in = #{netWeightIn,jdbcType=DOUBLE}");
        }
        
        if (record.getGrossWeightOut() != null) {
            SET("gross_weight_out = #{grossWeightOut,jdbcType=DOUBLE}");
        }
        
        if (record.getTareWeightOut() != null) {
            SET("tare_weight_out = #{tareWeightOut,jdbcType=DOUBLE}");
        }
        
        if (record.getNetWeightOut() != null) {
            SET("net_weight_out = #{netWeightOut,jdbcType=DOUBLE}");
        }
        
        if (record.getMoneyIn() != null) {
            SET("money_in = #{moneyIn,jdbcType=DOUBLE}");
        }
        
        if (record.getMoneyInTotal() != null) {
            SET("money_in_total = #{moneyInTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getMoneyOut() != null) {
            SET("money_out = #{moneyOut,jdbcType=DOUBLE}");
        }
        
        if (record.getMoneyOutTotal() != null) {
            SET("money_out_total = #{moneyOutTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getUnitPrice() != null) {
            SET("unit_price = #{unitPrice,jdbcType=DOUBLE}");
        }
        
        if (record.getBalance() != null) {
            SET("balance = #{balance,jdbcType=DOUBLE}");
        }
        
        if (record.getInTotal() != null) {
            SET("in_total = #{inTotal,jdbcType=DOUBLE}");
        }
        
        if (record.getAveragePriceIn() != null) {
            SET("average_price_in = #{averagePriceIn,jdbcType=DOUBLE}");
        }
        
        if (record.getInventoryCost() != null) {
            SET("inventory_cost = #{inventoryCost,jdbcType=DOUBLE}");
        }
        
        if (record.getInventoryMoney() != null) {
            SET("inventory_money = #{inventoryMoney,jdbcType=DOUBLE}");
        }
        
        if (record.getTotalProfit() != null) {
            SET("total_profit = #{totalProfit,jdbcType=DOUBLE}");
        }
        
        if (record.getProfit() != null) {
            SET("profit = #{profit,jdbcType=DOUBLE}");
        }
        
        if (record.getCreateTime() != null) {
            SET("create_time = #{createTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getMoistureContent() != null) {
            SET("moisture_content = #{moistureContent,jdbcType=VARCHAR}");
        }
        
        if (record.getBulkDensity() != null) {
            SET("bulk_density = #{bulkDensity,jdbcType=VARCHAR}");
        }
        
        if (record.getMildew() != null) {
            SET("mildew = #{mildew,jdbcType=VARCHAR}");
        }
        
        if (record.getImperfectGrains() != null) {
            SET("imperfect_grains = #{imperfectGrains,jdbcType=VARCHAR}");
        }
        
        if (record.getProductQuality() != null) {
            SET("product_quality = #{productQuality,jdbcType=VARCHAR}");
        }
        
        if (record.getImpurity() != null) {
            SET("impurity = #{impurity,jdbcType=VARCHAR}");
        }
        
        if (record.getStaffId() != null) {
            SET("staff_id = #{staffId,jdbcType=INTEGER}");
        }
        
        if (record.getStaffName() != null) {
            SET("staff_name = #{staffName,jdbcType=VARCHAR}");
        }
        
        if (record.getStaffPhone() != null) {
            SET("staff_phone = #{staffPhone,jdbcType=VARCHAR}");
        }
        
        if (record.getIntColumn1() != null) {
            SET("int_column1 = #{intColumn1,jdbcType=INTEGER}");
        }
        
        if (record.getIntColumn2() != null) {
            SET("int_column2 = #{intColumn2,jdbcType=INTEGER}");
        }
        
        if (record.getStrColumn1() != null) {
            SET("str_column1 = #{strColumn1,jdbcType=VARCHAR}");
        }
        
        if (record.getStrColumn2() != null) {
            SET("str_column2 = #{strColumn2,jdbcType=VARCHAR}");
        }
        
        if (record.getRemark() != null) {
            SET("remark = #{remark,jdbcType=VARCHAR}");
        }
        
        if (record.getDriverId() != null) {
            SET("driver_id = #{driverId,jdbcType=INTEGER}");
        }
        
        if (record.getDriverName() != null) {
            SET("driver_name = #{driverName,jdbcType=VARCHAR}");
        }
        
        if (record.getDriverPhone() != null) {
            SET("driver_phone = #{driverPhone,jdbcType=VARCHAR}");
        }
        
        if (record.getDeduction() != null) {
            SET("deduction = #{deduction,jdbcType=DOUBLE}");
        }
        
        if (record.getSmell() != null) {
            SET("smell = #{smell,jdbcType=VARCHAR}");
        }
        
        if (record.getLocation() != null) {
            SET("location = #{location,jdbcType=VARCHAR}");
        }
        
        if (record.getLocationDesc() != null) {
            SET("location_desc = #{locationDesc,jdbcType=VARCHAR}");
        }
        
        if (record.getVarietyType() != null) {
            SET("variety_type = #{varietyType,jdbcType=INTEGER}");
        }
        
        if (record.getPackingType() != null) {
            SET("packing_type = #{packingType,jdbcType=INTEGER}");
        }
        
        if (record.getProductionNiafe() != null) {
            SET("production_niafe = #{productionNiafe,jdbcType=VARCHAR}");
        }
        
        if (record.getCost() != null) {
            SET("cost = #{cost,jdbcType=DOUBLE}");
        }
        
        if (record.getShifuk() != null) {
            SET("shifuk = #{shifuk,jdbcType=DOUBLE}");
        }
        
        if (record.getIfPayment() != null) {
            SET("if_payment = #{ifPayment,jdbcType=INTEGER}");
        }
        
        if (record.getPaidMoney() != null) {
            SET("paid_money = #{paidMoney,jdbcType=DOUBLE}");
        }
        
        if (record.getUnpaidMoney() != null) {
            SET("unpaid_money = #{unpaidMoney,jdbcType=DOUBLE}");
        }
        
        if (record.getIfClear() != null) {
            SET("if_clear = #{ifClear,jdbcType=INTEGER}");
        }
        
        if (record.getOperateUserId() != null) {
            SET("operate_user_id = #{operateUserId,jdbcType=INTEGER}");
        }
        
        if (record.getOperateUserName() != null) {
            SET("operate_user_name = #{operateUserName,jdbcType=VARCHAR}");
        }
        
        if (record.getDepotId() != null) {
            SET("depot_id = #{depotId,jdbcType=INTEGER}");
        }
        
        WHERE("id = #{id,jdbcType=INTEGER}");
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bs_inventory_record
     *
     * @mbggenerated Mon May 15 11:47:33 CST 2017
     */
    protected void applyWhere(BsInventoryRecordExample example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            WHERE(sb.toString());
        }
    }
}