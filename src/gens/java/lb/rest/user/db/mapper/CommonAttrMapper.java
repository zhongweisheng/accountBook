package lb.rest.user.db.mapper;

import java.util.List;

import lb.rest.user.db.entity.CommonAttr;
import lb.rest.user.db.entity.CommonAttrExample;
import lb.rest.user.db.entity.CommonAttrKey;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

import fc.wpf.rest.db.iface.StaticTableDaoSupport;

public interface CommonAttrMapper extends StaticTableDaoSupport<CommonAttr, CommonAttrExample, CommonAttrKey> {
	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	@SelectProvider(type = CommonAttrSqlProvider.class, method = "countByExample")
	int countByExample(CommonAttrExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	@DeleteProvider(type = CommonAttrSqlProvider.class, method = "deleteByExample")
	int deleteByExample(CommonAttrExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	@Delete({ "delete from common_attr", "where attrId = #{attrid,jdbcType=INTEGER}" })
	int deleteByPrimaryKey(CommonAttrKey key);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	@Insert({ "insert into common_attr (attrId, attrName, ", "typeId, isAvailable, ", "createTime, sort, ",
			"rule, weight)", "values (#{attrid,jdbcType=INTEGER}, #{attrname,jdbcType=VARCHAR}, ",
			"#{typeid,jdbcType=INTEGER}, #{isavailable,jdbcType=INTEGER}, ",
			"#{createtime,jdbcType=TIMESTAMP}, #{sort,jdbcType=INTEGER}, ",
			"#{rule,jdbcType=VARCHAR}, #{weight,jdbcType=DOUBLE})" })
	int insert(CommonAttr record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	@InsertProvider(type = CommonAttrSqlProvider.class, method = "insertSelective")
	int insertSelective(CommonAttr record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	@SelectProvider(type = CommonAttrSqlProvider.class, method = "selectByExample")
	@Results({ @Result(column = "attrId", property = "attrid", jdbcType = JdbcType.INTEGER, id = true),
			@Result(column = "attrName", property = "attrname", jdbcType = JdbcType.VARCHAR),
			@Result(column = "typeId", property = "typeid", jdbcType = JdbcType.INTEGER),
			@Result(column = "isAvailable", property = "isavailable", jdbcType = JdbcType.INTEGER),
			@Result(column = "createTime", property = "createtime", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "sort", property = "sort", jdbcType = JdbcType.INTEGER),
			@Result(column = "rule", property = "rule", jdbcType = JdbcType.VARCHAR),
			@Result(column = "weight", property = "weight", jdbcType = JdbcType.DOUBLE) })
	List<CommonAttr> selectByExample(CommonAttrExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	@Select({ "select", "attrId, attrName, typeId, isAvailable, createTime, sort, rule, weight", "from common_attr",
			"where attrId = #{attrid,jdbcType=INTEGER}" })
	@Results({ @Result(column = "attrId", property = "attrid", jdbcType = JdbcType.INTEGER, id = true),
			@Result(column = "attrName", property = "attrname", jdbcType = JdbcType.VARCHAR),
			@Result(column = "typeId", property = "typeid", jdbcType = JdbcType.INTEGER),
			@Result(column = "isAvailable", property = "isavailable", jdbcType = JdbcType.INTEGER),
			@Result(column = "createTime", property = "createtime", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "sort", property = "sort", jdbcType = JdbcType.INTEGER),
			@Result(column = "rule", property = "rule", jdbcType = JdbcType.VARCHAR),
			@Result(column = "weight", property = "weight", jdbcType = JdbcType.DOUBLE) })
	CommonAttr selectByPrimaryKey(CommonAttrKey key);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	@UpdateProvider(type = CommonAttrSqlProvider.class, method = "updateByExampleSelective")
	int updateByExampleSelective(@Param("record") CommonAttr record, @Param("example") CommonAttrExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	@UpdateProvider(type = CommonAttrSqlProvider.class, method = "updateByExample")
	int updateByExample(@Param("record") CommonAttr record, @Param("example") CommonAttrExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	@UpdateProvider(type = CommonAttrSqlProvider.class, method = "updateByPrimaryKeySelective")
	int updateByPrimaryKeySelective(CommonAttr record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	@Update({ "update common_attr", "set attrName = #{attrname,jdbcType=VARCHAR},",
			"typeId = #{typeid,jdbcType=INTEGER},", "isAvailable = #{isavailable,jdbcType=INTEGER},",
			"createTime = #{createtime,jdbcType=TIMESTAMP},", "sort = #{sort,jdbcType=INTEGER},",
			"rule = #{rule,jdbcType=VARCHAR},", "weight = #{weight,jdbcType=DOUBLE}",
			"where attrId = #{attrid,jdbcType=INTEGER}" })
	int updateByPrimaryKey(CommonAttr record);
}