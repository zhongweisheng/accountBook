package lb.rest.user.db.mapper;

import fc.wpf.rest.db.iface.StaticTableDaoSupport;
import java.util.List;
import lb.rest.user.db.entity.Image;
import lb.rest.user.db.entity.ImageExample;
import lb.rest.user.db.entity.ImageKey;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface ImageMapper extends StaticTableDaoSupport<Image, ImageExample, ImageKey> {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table image
     *
     * @mbggenerated Thu Feb 16 17:53:28 CST 2017
     */
    @SelectProvider(type=ImageSqlProvider.class, method="countByExample")
    int countByExample(ImageExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table image
     *
     * @mbggenerated Thu Feb 16 17:53:28 CST 2017
     */
    @DeleteProvider(type=ImageSqlProvider.class, method="deleteByExample")
    int deleteByExample(ImageExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table image
     *
     * @mbggenerated Thu Feb 16 17:53:28 CST 2017
     */
    @Delete({
        "delete from image",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(ImageKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table image
     *
     * @mbggenerated Thu Feb 16 17:53:28 CST 2017
     */
    @Insert({
        "insert into image (id, imagename, ",
        "imagepath, status, ",
        "imagetype, foreignkey)",
        "values (#{id,jdbcType=INTEGER}, #{imagename,jdbcType=VARCHAR}, ",
        "#{imagepath,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, ",
        "#{imagetype,jdbcType=VARCHAR}, #{foreignkey,jdbcType=INTEGER})"
    })
    int insert(Image record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table image
     *
     * @mbggenerated Thu Feb 16 17:53:28 CST 2017
     */
    @InsertProvider(type=ImageSqlProvider.class, method="insertSelective")
    int insertSelective(Image record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table image
     *
     * @mbggenerated Thu Feb 16 17:53:28 CST 2017
     */
    @SelectProvider(type=ImageSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="imagename", property="imagename", jdbcType=JdbcType.VARCHAR),
        @Result(column="imagepath", property="imagepath", jdbcType=JdbcType.VARCHAR),
        @Result(column="status", property="status", jdbcType=JdbcType.INTEGER),
        @Result(column="imagetype", property="imagetype", jdbcType=JdbcType.VARCHAR),
        @Result(column="foreignkey", property="foreignkey", jdbcType=JdbcType.INTEGER)
    })
    List<Image> selectByExample(ImageExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table image
     *
     * @mbggenerated Thu Feb 16 17:53:28 CST 2017
     */
    @Select({
        "select",
        "id, imagename, imagepath, status, imagetype, foreignkey",
        "from image",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="imagename", property="imagename", jdbcType=JdbcType.VARCHAR),
        @Result(column="imagepath", property="imagepath", jdbcType=JdbcType.VARCHAR),
        @Result(column="status", property="status", jdbcType=JdbcType.INTEGER),
        @Result(column="imagetype", property="imagetype", jdbcType=JdbcType.VARCHAR),
        @Result(column="foreignkey", property="foreignkey", jdbcType=JdbcType.INTEGER)
    })
    Image selectByPrimaryKey(ImageKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table image
     *
     * @mbggenerated Thu Feb 16 17:53:28 CST 2017
     */
    @UpdateProvider(type=ImageSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") Image record, @Param("example") ImageExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table image
     *
     * @mbggenerated Thu Feb 16 17:53:28 CST 2017
     */
    @UpdateProvider(type=ImageSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") Image record, @Param("example") ImageExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table image
     *
     * @mbggenerated Thu Feb 16 17:53:28 CST 2017
     */
    @UpdateProvider(type=ImageSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Image record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table image
     *
     * @mbggenerated Thu Feb 16 17:53:28 CST 2017
     */
    @Update({
        "update image",
        "set imagename = #{imagename,jdbcType=VARCHAR},",
          "imagepath = #{imagepath,jdbcType=VARCHAR},",
          "status = #{status,jdbcType=INTEGER},",
          "imagetype = #{imagetype,jdbcType=VARCHAR},",
          "foreignkey = #{foreignkey,jdbcType=INTEGER}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Image record);
}