package lb.rest.user.db.mapper;

import fc.wpf.rest.db.iface.StaticTableDaoSupport;

import java.util.List;
import java.util.Map;

import lb.rest.user.db.entity.Mlbuser;
import lb.rest.user.db.entity.MlbuserExample;
import lb.rest.user.db.entity.MlbuserKey;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface MlbuserMapper extends StaticTableDaoSupport<Mlbuser, MlbuserExample, MlbuserKey> {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mlbuser
     *
     * @mbggenerated Sat Feb 25 19:11:44 CST 2017
     */
    @SelectProvider(type=MlbuserSqlProvider.class, method="countByExample")
    int countByExample(MlbuserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mlbuser
     *
     * @mbggenerated Sat Feb 25 19:11:44 CST 2017
     */
    @DeleteProvider(type=MlbuserSqlProvider.class, method="deleteByExample")
    int deleteByExample(MlbuserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mlbuser
     *
     * @mbggenerated Sat Feb 25 19:11:44 CST 2017
     */
    @Delete({
        "delete from mlbuser",
        "where userId = #{userid,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(MlbuserKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mlbuser
     *
     * @mbggenerated Sat Feb 25 19:11:44 CST 2017
     */
    @Insert({
        "insert into mlbuser (userId, registerstatus, ",
        "truename, phone, ",
        "loginname, password, ",
        "status, usertype, ",
        "location, address, ",
        "preferuserid, openid, ",
        "nickname, userimage, ",
        "locationdesc, invitecode, ",
        "regtime, companyname, ",
        "fromtype, createuserid, ",
        "level, updatetime, ",
        "is_manage, manager_id, ",
        "has_agree, blacklist, ",
        "authentication, processCode, ",
        "traderUserId, traderName, ",
        "client_name, customerName, ",
        "remark, assigns_status, ",
        "apply_user_status, apply_user_time, ",
        "buy_type, maintainer, ",
        "shineUser, id_card, ",
        "email, phone2, auth_time, ",
        "company_auth, personal_auth)",
        "values (#{userid,jdbcType=INTEGER}, #{registerstatus,jdbcType=INTEGER}, ",
        "#{truename,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, ",
        "#{loginname,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, ",
        "#{status,jdbcType=INTEGER}, #{usertype,jdbcType=INTEGER}, ",
        "#{location,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, ",
        "#{preferuserid,jdbcType=INTEGER}, #{openid,jdbcType=VARCHAR}, ",
        "#{nickname,jdbcType=VARCHAR}, #{userimage,jdbcType=VARCHAR}, ",
        "#{locationdesc,jdbcType=VARCHAR}, #{invitecode,jdbcType=VARCHAR}, ",
        "#{regtime,jdbcType=TIMESTAMP}, #{companyname,jdbcType=VARCHAR}, ",
        "#{fromtype,jdbcType=INTEGER}, #{createuserid,jdbcType=INTEGER}, ",
        "#{level,jdbcType=INTEGER}, #{updatetime,jdbcType=TIMESTAMP}, ",
        "#{isManage,jdbcType=INTEGER}, #{managerId,jdbcType=INTEGER}, ",
        "#{hasAgree,jdbcType=INTEGER}, #{blacklist,jdbcType=INTEGER}, ",
        "#{authentication,jdbcType=INTEGER}, #{processcode,jdbcType=INTEGER}, ",
        "#{traderuserid,jdbcType=INTEGER}, #{tradername,jdbcType=VARCHAR}, ",
        "#{clientName,jdbcType=VARCHAR}, #{customername,jdbcType=VARCHAR}, ",
        "#{remark,jdbcType=VARCHAR}, #{assignsStatus,jdbcType=INTEGER}, ",
        "#{applyUserStatus,jdbcType=INTEGER}, #{applyUserTime,jdbcType=TIMESTAMP}, ",
        "#{buyType,jdbcType=INTEGER}, #{maintainer,jdbcType=VARCHAR}, ",
        "#{shineuser,jdbcType=INTEGER}, #{idCard,jdbcType=VARCHAR}, ",
        "#{email,jdbcType=VARCHAR}, #{phone2,jdbcType=VARCHAR}, #{authTime,jdbcType=TIMESTAMP}, ",
        "#{companyAuth,jdbcType=INTEGER}, #{personalAuth,jdbcType=INTEGER})"
    })
    int insert(Mlbuser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mlbuser
     *
     * @mbggenerated Sat Feb 25 19:11:44 CST 2017
     */
    @InsertProvider(type=MlbuserSqlProvider.class, method="insertSelective")
    int insertSelective(Mlbuser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mlbuser
     *
     * @mbggenerated Sat Feb 25 19:11:44 CST 2017
     */
    @SelectProvider(type=MlbuserSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="userId", property="userid", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="registerstatus", property="registerstatus", jdbcType=JdbcType.INTEGER),
        @Result(column="truename", property="truename", jdbcType=JdbcType.VARCHAR),
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
        @Result(column="loginname", property="loginname", jdbcType=JdbcType.VARCHAR),
        @Result(column="password", property="password", jdbcType=JdbcType.VARCHAR),
        @Result(column="status", property="status", jdbcType=JdbcType.INTEGER),
        @Result(column="usertype", property="usertype", jdbcType=JdbcType.INTEGER),
        @Result(column="location", property="location", jdbcType=JdbcType.VARCHAR),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="preferuserid", property="preferuserid", jdbcType=JdbcType.INTEGER),
        @Result(column="openid", property="openid", jdbcType=JdbcType.VARCHAR),
        @Result(column="nickname", property="nickname", jdbcType=JdbcType.VARCHAR),
        @Result(column="userimage", property="userimage", jdbcType=JdbcType.VARCHAR),
        @Result(column="locationdesc", property="locationdesc", jdbcType=JdbcType.VARCHAR),
        @Result(column="invitecode", property="invitecode", jdbcType=JdbcType.VARCHAR),
        @Result(column="regtime", property="regtime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="companyname", property="companyname", jdbcType=JdbcType.VARCHAR),
        @Result(column="fromtype", property="fromtype", jdbcType=JdbcType.INTEGER),
        @Result(column="createuserid", property="createuserid", jdbcType=JdbcType.INTEGER),
        @Result(column="level", property="level", jdbcType=JdbcType.INTEGER),
        @Result(column="updatetime", property="updatetime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="is_manage", property="isManage", jdbcType=JdbcType.INTEGER),
        @Result(column="manager_id", property="managerId", jdbcType=JdbcType.INTEGER),
        @Result(column="has_agree", property="hasAgree", jdbcType=JdbcType.INTEGER),
        @Result(column="blacklist", property="blacklist", jdbcType=JdbcType.INTEGER),
        @Result(column="authentication", property="authentication", jdbcType=JdbcType.INTEGER),
        @Result(column="processCode", property="processcode", jdbcType=JdbcType.INTEGER),
        @Result(column="traderUserId", property="traderuserid", jdbcType=JdbcType.INTEGER),
        @Result(column="traderName", property="tradername", jdbcType=JdbcType.VARCHAR),
        @Result(column="client_name", property="clientName", jdbcType=JdbcType.VARCHAR),
        @Result(column="customerName", property="customername", jdbcType=JdbcType.VARCHAR),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
        @Result(column="assigns_status", property="assignsStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="apply_user_status", property="applyUserStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="apply_user_time", property="applyUserTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="buy_type", property="buyType", jdbcType=JdbcType.INTEGER),
        @Result(column="maintainer", property="maintainer", jdbcType=JdbcType.VARCHAR),
        @Result(column="shineUser", property="shineuser", jdbcType=JdbcType.INTEGER),
        @Result(column="id_card", property="idCard", jdbcType=JdbcType.VARCHAR),
        @Result(column="email", property="email", jdbcType=JdbcType.VARCHAR),
        @Result(column="phone2", property="phone2", jdbcType=JdbcType.VARCHAR),
        @Result(column="auth_time", property="authTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="company_auth", property="companyAuth", jdbcType=JdbcType.INTEGER),
        @Result(column="personal_auth", property="personalAuth", jdbcType=JdbcType.INTEGER)
    })
    List<Mlbuser> selectByExample(MlbuserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mlbuser
     *
     * @mbggenerated Sat Feb 25 19:11:44 CST 2017
     */
    @Select({
        "select",
        "userId, registerstatus, truename, phone, loginname, password, status, usertype, ",
        "location, address, preferuserid, openid, nickname, userimage, locationdesc, ",
        "invitecode, regtime, companyname, fromtype, createuserid, level, updatetime, ",
        "is_manage, manager_id, has_agree, blacklist, authentication, processCode, traderUserId, ",
        "traderName, client_name, customerName, remark, assigns_status, apply_user_status, ",
        "apply_user_time, buy_type, maintainer, shineUser, id_card, email, phone2, auth_time, ",
        "company_auth, personal_auth",
        "from mlbuser",
        "where userId = #{userid,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="userId", property="userid", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="registerstatus", property="registerstatus", jdbcType=JdbcType.INTEGER),
        @Result(column="truename", property="truename", jdbcType=JdbcType.VARCHAR),
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
        @Result(column="loginname", property="loginname", jdbcType=JdbcType.VARCHAR),
        @Result(column="password", property="password", jdbcType=JdbcType.VARCHAR),
        @Result(column="status", property="status", jdbcType=JdbcType.INTEGER),
        @Result(column="usertype", property="usertype", jdbcType=JdbcType.INTEGER),
        @Result(column="location", property="location", jdbcType=JdbcType.VARCHAR),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="preferuserid", property="preferuserid", jdbcType=JdbcType.INTEGER),
        @Result(column="openid", property="openid", jdbcType=JdbcType.VARCHAR),
        @Result(column="nickname", property="nickname", jdbcType=JdbcType.VARCHAR),
        @Result(column="userimage", property="userimage", jdbcType=JdbcType.VARCHAR),
        @Result(column="locationdesc", property="locationdesc", jdbcType=JdbcType.VARCHAR),
        @Result(column="invitecode", property="invitecode", jdbcType=JdbcType.VARCHAR),
        @Result(column="regtime", property="regtime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="companyname", property="companyname", jdbcType=JdbcType.VARCHAR),
        @Result(column="fromtype", property="fromtype", jdbcType=JdbcType.INTEGER),
        @Result(column="createuserid", property="createuserid", jdbcType=JdbcType.INTEGER),
        @Result(column="level", property="level", jdbcType=JdbcType.INTEGER),
        @Result(column="updatetime", property="updatetime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="is_manage", property="isManage", jdbcType=JdbcType.INTEGER),
        @Result(column="manager_id", property="managerId", jdbcType=JdbcType.INTEGER),
        @Result(column="has_agree", property="hasAgree", jdbcType=JdbcType.INTEGER),
        @Result(column="blacklist", property="blacklist", jdbcType=JdbcType.INTEGER),
        @Result(column="authentication", property="authentication", jdbcType=JdbcType.INTEGER),
        @Result(column="processCode", property="processcode", jdbcType=JdbcType.INTEGER),
        @Result(column="traderUserId", property="traderuserid", jdbcType=JdbcType.INTEGER),
        @Result(column="traderName", property="tradername", jdbcType=JdbcType.VARCHAR),
        @Result(column="client_name", property="clientName", jdbcType=JdbcType.VARCHAR),
        @Result(column="customerName", property="customername", jdbcType=JdbcType.VARCHAR),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
        @Result(column="assigns_status", property="assignsStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="apply_user_status", property="applyUserStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="apply_user_time", property="applyUserTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="buy_type", property="buyType", jdbcType=JdbcType.INTEGER),
        @Result(column="maintainer", property="maintainer", jdbcType=JdbcType.VARCHAR),
        @Result(column="shineUser", property="shineuser", jdbcType=JdbcType.INTEGER),
        @Result(column="id_card", property="idCard", jdbcType=JdbcType.VARCHAR),
        @Result(column="email", property="email", jdbcType=JdbcType.VARCHAR),
        @Result(column="phone2", property="phone2", jdbcType=JdbcType.VARCHAR),
        @Result(column="auth_time", property="authTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="company_auth", property="companyAuth", jdbcType=JdbcType.INTEGER),
        @Result(column="personal_auth", property="personalAuth", jdbcType=JdbcType.INTEGER)
    })
    Mlbuser selectByPrimaryKey(MlbuserKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mlbuser
     *
     * @mbggenerated Sat Feb 25 19:11:44 CST 2017
     */
    @UpdateProvider(type=MlbuserSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") Mlbuser record, @Param("example") MlbuserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mlbuser
     *
     * @mbggenerated Sat Feb 25 19:11:44 CST 2017
     */
    @UpdateProvider(type=MlbuserSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") Mlbuser record, @Param("example") MlbuserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mlbuser
     *
     * @mbggenerated Sat Feb 25 19:11:44 CST 2017
     */
    @UpdateProvider(type=MlbuserSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Mlbuser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mlbuser
     *
     * @mbggenerated Sat Feb 25 19:11:44 CST 2017
     */
    @Update({
        "update mlbuser",
        "set registerstatus = #{registerstatus,jdbcType=INTEGER},",
          "truename = #{truename,jdbcType=VARCHAR},",
          "phone = #{phone,jdbcType=VARCHAR},",
          "loginname = #{loginname,jdbcType=VARCHAR},",
          "password = #{password,jdbcType=VARCHAR},",
          "status = #{status,jdbcType=INTEGER},",
          "usertype = #{usertype,jdbcType=INTEGER},",
          "location = #{location,jdbcType=VARCHAR},",
          "address = #{address,jdbcType=VARCHAR},",
          "preferuserid = #{preferuserid,jdbcType=INTEGER},",
          "openid = #{openid,jdbcType=VARCHAR},",
          "nickname = #{nickname,jdbcType=VARCHAR},",
          "userimage = #{userimage,jdbcType=VARCHAR},",
          "locationdesc = #{locationdesc,jdbcType=VARCHAR},",
          "invitecode = #{invitecode,jdbcType=VARCHAR},",
          "regtime = #{regtime,jdbcType=TIMESTAMP},",
          "companyname = #{companyname,jdbcType=VARCHAR},",
          "fromtype = #{fromtype,jdbcType=INTEGER},",
          "createuserid = #{createuserid,jdbcType=INTEGER},",
          "level = #{level,jdbcType=INTEGER},",
          "updatetime = #{updatetime,jdbcType=TIMESTAMP},",
          "is_manage = #{isManage,jdbcType=INTEGER},",
          "manager_id = #{managerId,jdbcType=INTEGER},",
          "has_agree = #{hasAgree,jdbcType=INTEGER},",
          "blacklist = #{blacklist,jdbcType=INTEGER},",
          "authentication = #{authentication,jdbcType=INTEGER},",
          "processCode = #{processcode,jdbcType=INTEGER},",
          "traderUserId = #{traderuserid,jdbcType=INTEGER},",
          "traderName = #{tradername,jdbcType=VARCHAR},",
          "client_name = #{clientName,jdbcType=VARCHAR},",
          "customerName = #{customername,jdbcType=VARCHAR},",
          "remark = #{remark,jdbcType=VARCHAR},",
          "assigns_status = #{assignsStatus,jdbcType=INTEGER},",
          "apply_user_status = #{applyUserStatus,jdbcType=INTEGER},",
          "apply_user_time = #{applyUserTime,jdbcType=TIMESTAMP},",
          "buy_type = #{buyType,jdbcType=INTEGER},",
          "maintainer = #{maintainer,jdbcType=VARCHAR},",
          "shineUser = #{shineuser,jdbcType=INTEGER},",
          "id_card = #{idCard,jdbcType=VARCHAR},",
          "email = #{email,jdbcType=VARCHAR},",
          "phone2 = #{phone2,jdbcType=VARCHAR},",
          "auth_time = #{authTime,jdbcType=TIMESTAMP},",
          "company_auth = #{companyAuth,jdbcType=INTEGER},",
          "personal_auth = #{personalAuth,jdbcType=INTEGER}",
        "where userId = #{userid,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Mlbuser record);
    
    
    @SelectProvider(type=MlbuserSqlProvider.class, method="getMlbuserByShinUser")
    @Results({
        @Result(column="userId", property="userid", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="registerstatus", property="registerstatus", jdbcType=JdbcType.INTEGER),
        @Result(column="truename", property="truename", jdbcType=JdbcType.VARCHAR),
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
        @Result(column="loginname", property="loginname", jdbcType=JdbcType.VARCHAR),
        @Result(column="password", property="password", jdbcType=JdbcType.VARCHAR),
        @Result(column="status", property="status", jdbcType=JdbcType.INTEGER),
        @Result(column="usertype", property="usertype", jdbcType=JdbcType.INTEGER),
        @Result(column="location", property="location", jdbcType=JdbcType.VARCHAR),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="preferuserid", property="preferuserid", jdbcType=JdbcType.INTEGER),
        @Result(column="openid", property="openid", jdbcType=JdbcType.VARCHAR),
        @Result(column="nickname", property="nickname", jdbcType=JdbcType.VARCHAR),
        @Result(column="userimage", property="userimage", jdbcType=JdbcType.VARCHAR),
        @Result(column="locationdesc", property="locationdesc", jdbcType=JdbcType.VARCHAR),
        @Result(column="invitecode", property="invitecode", jdbcType=JdbcType.VARCHAR),
        @Result(column="regtime", property="regtime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="companyname", property="companyname", jdbcType=JdbcType.VARCHAR),
        @Result(column="fromtype", property="fromtype", jdbcType=JdbcType.INTEGER),
        @Result(column="createuserid", property="createuserid", jdbcType=JdbcType.INTEGER),
        @Result(column="level", property="level", jdbcType=JdbcType.INTEGER),
        @Result(column="updatetime", property="updatetime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="is_manage", property="isManage", jdbcType=JdbcType.INTEGER),
        @Result(column="manager_id", property="managerId", jdbcType=JdbcType.INTEGER),
        @Result(column="has_agree", property="hasAgree", jdbcType=JdbcType.INTEGER),
        @Result(column="blacklist", property="blacklist", jdbcType=JdbcType.INTEGER),
        @Result(column="authentication", property="authentication", jdbcType=JdbcType.INTEGER),
        @Result(column="processCode", property="processcode", jdbcType=JdbcType.INTEGER),
        @Result(column="traderUserId", property="traderuserid", jdbcType=JdbcType.INTEGER),
        @Result(column="traderName", property="tradername", jdbcType=JdbcType.VARCHAR),
        @Result(column="client_name", property="clientName", jdbcType=JdbcType.VARCHAR),
        @Result(column="customerName", property="customername", jdbcType=JdbcType.VARCHAR),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
        @Result(column="assigns_status", property="assignsStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="apply_user_status", property="applyUserStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="apply_user_time", property="applyUserTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="buy_type", property="buyType", jdbcType=JdbcType.INTEGER),
        @Result(column="maintainer", property="maintainer", jdbcType=JdbcType.VARCHAR),
        @Result(column="shineUser", property="shineuser", jdbcType=JdbcType.INTEGER),
        @Result(column="id_card", property="idCard", jdbcType=JdbcType.VARCHAR),
        @Result(column="email", property="email", jdbcType=JdbcType.VARCHAR),
        @Result(column="phone2", property="phone2", jdbcType=JdbcType.VARCHAR),
        @Result(column="auth_time", property="authTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="company_auth", property="companyAuth", jdbcType=JdbcType.INTEGER),
        @Result(column="personal_auth", property="personalAuth", jdbcType=JdbcType.INTEGER)
    })
    List<Mlbuser> selectByExampleByShineUser(@Param("type") String type);
}