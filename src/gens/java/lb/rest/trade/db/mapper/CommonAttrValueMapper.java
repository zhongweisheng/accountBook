package lb.rest.trade.db.mapper;

import java.util.List;

import lb.rest.trade.db.entity.CommonAttrValue;
import lb.rest.trade.db.entity.CommonAttrValueExample;
import lb.rest.trade.db.entity.CommonAttrValueKey;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

import fc.wpf.rest.db.iface.StaticTableDaoSupport;

public interface CommonAttrValueMapper extends
		StaticTableDaoSupport<CommonAttrValue, CommonAttrValueExample, CommonAttrValueKey> {
	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr_value
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	@SelectProvider(type = CommonAttrValueSqlProvider.class, method = "countByExample")
	int countByExample(CommonAttrValueExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr_value
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	@DeleteProvider(type = CommonAttrValueSqlProvider.class, method = "deleteByExample")
	int deleteByExample(CommonAttrValueExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr_value
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	@Delete({ "delete from common_attr_value", "where id = #{id,jdbcType=INTEGER}" })
	int deleteByPrimaryKey(CommonAttrValueKey key);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr_value
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	@Insert({ "insert into common_attr_value (id, attrId, ", "attrValue, typeId, ", "belongId, belongTable)",
			"values (#{id,jdbcType=INTEGER},#{attrid,jdbcType=INTEGER}, ",
			"#{attrvalue,jdbcType=VARCHAR}, #{typeid,jdbcType=INTEGER}, ",
			"#{belongid,jdbcType=INTEGER}, #{belongtable,jdbcType=INTEGER})" })
	int insert(CommonAttrValue record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr_value
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	@InsertProvider(type = CommonAttrValueSqlProvider.class, method = "insertSelective")
	int insertSelective(CommonAttrValue record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr_value
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	@SelectProvider(type = CommonAttrValueSqlProvider.class, method = "selectByExample")
	@Results({ @Result(column = "id", property = "id", jdbcType = JdbcType.INTEGER, id = true),
			@Result(column = "attrId", property = "attrid", jdbcType = JdbcType.INTEGER),
			@Result(column = "attrValue", property = "attrvalue", jdbcType = JdbcType.VARCHAR),
			@Result(column = "typeId", property = "typeid", jdbcType = JdbcType.INTEGER),
			@Result(column = "belongId", property = "belongid", jdbcType = JdbcType.INTEGER),
			@Result(column = "belongTable", property = "belongtable", jdbcType = JdbcType.INTEGER) })
	List<CommonAttrValue> selectByExample(CommonAttrValueExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr_value
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	@Select({ "select", "id, attrId, attrValue, typeId, belongId, belongTable", "from common_attr_value",
			"where id = #{id,jdbcType=INTEGER}" })
	@Results({ @Result(column = "id", property = "id", jdbcType = JdbcType.INTEGER, id = true),
			@Result(column = "attrId", property = "attrid", jdbcType = JdbcType.INTEGER),
			@Result(column = "attrValue", property = "attrvalue", jdbcType = JdbcType.VARCHAR),
			@Result(column = "typeId", property = "typeid", jdbcType = JdbcType.INTEGER),
			@Result(column = "belongId", property = "belongid", jdbcType = JdbcType.INTEGER),
			@Result(column = "belongTable", property = "belongtable", jdbcType = JdbcType.INTEGER) })
	CommonAttrValue selectByPrimaryKey(CommonAttrValueKey key);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr_value
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	@UpdateProvider(type = CommonAttrValueSqlProvider.class, method = "updateByExampleSelective")
	int updateByExampleSelective(@Param("record") CommonAttrValue record,
			@Param("example") CommonAttrValueExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr_value
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	@UpdateProvider(type = CommonAttrValueSqlProvider.class, method = "updateByExample")
	int updateByExample(@Param("record") CommonAttrValue record, @Param("example") CommonAttrValueExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr_value
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	@UpdateProvider(type = CommonAttrValueSqlProvider.class, method = "updateByPrimaryKeySelective")
	int updateByPrimaryKeySelective(CommonAttrValue record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table common_attr_value
	 *
	 * @mbggenerated Thu Feb 16 17:53:28 CST 2017
	 */
	@Update({ "update common_attr_value", "set attrId = #{attrid,jdbcType=INTEGER},",
			"attrValue = #{attrvalue,jdbcType=VARCHAR},", "typeId = #{typeid,jdbcType=INTEGER},",
			"belongId = #{belongid,jdbcType=INTEGER},", "belongTable = #{belongtable,jdbcType=INTEGER}",
			"where id = #{id,jdbcType=INTEGER}" })
	int updateByPrimaryKey(CommonAttrValue record);
}