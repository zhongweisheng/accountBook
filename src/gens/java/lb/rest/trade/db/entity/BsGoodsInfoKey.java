package lb.rest.trade.db.entity;

public class BsGoodsInfoKey {
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to
	 * the database column bs_goods_info.id
	 *
	 * @mbggenerated Fri Feb 24 18:06:23 CST 2017
	 */
	private Long id;

	/**
	 * This method was generated by MyBatis Generator. This method returns the
	 * value of the database column bs_goods_info.id
	 *
	 * @return the value of bs_goods_info.id
	 *
	 * @mbggenerated Fri Feb 24 18:06:23 CST 2017
	 */
	public Long getId() {
		return id;
	}

	/**
	 * This method was generated by MyBatis Generator. This method sets the
	 * value of the database column bs_goods_info.id
	 *
	 * @param id
	 *            the value for bs_goods_info.id
	 *
	 * @mbggenerated Fri Feb 24 18:06:23 CST 2017
	 */
	public void setId(Long id) {
		this.id = id;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table bs_goods_info
	 *
	 * @mbggenerated Fri Feb 24 18:06:23 CST 2017
	 */
	@Override
	public boolean equals(Object that) {
		if (this == that) {
			return true;
		}
		if (that == null) {
			return false;
		}
		if (getClass() != that.getClass()) {
			return false;
		}
		BsGoodsInfoKey other = (BsGoodsInfoKey) that;
		return (this.getId() == null ? other.getId() == null : this.getId().equals(other.getId()));
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table bs_goods_info
	 *
	 * @mbggenerated Fri Feb 24 18:06:23 CST 2017
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
		return result;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table bs_goods_info
	 *
	 * @mbggenerated Fri Feb 24 18:06:23 CST 2017
	 */
	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append(getClass().getSimpleName());
		sb.append(" [");
		sb.append("Hash = ").append(hashCode());
		sb.append(", id=").append(id);
		sb.append("]");
		return sb.toString();
	}
}